{"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","modules":[{"relatedModules":["SwiftUICore"],"name":"RSEssentials"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"SwiftUICore","title":"cornerRadius(radius:antialiased:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cornerRadius"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"antialiased"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"externalID":"s:7SwiftUI4ViewP12RSEssentialsE12cornerRadius6radius11antialiasedQr14CoreFoundation7CGFloatV_SbtF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadius(radius:antialiased:)"},"abstract":[{"text":"Applies a corner radius to a view.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cornerRadius","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"text":"antialiased","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":" = true) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"radius","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The radius to use when rounding the corners of the view. A value of "},{"type":"codeVoice","code":"0"},{"text":" results in squared corners.","type":"text"}]}]},{"name":"antialiased","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean value that determines whether the edges of the border should be antialiased, resulting in smoother edges. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A view that rounds the original viewâ€™s corners with the specified parameters."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This modifier rounds the corners of the underlying view to the specified radius. Additionally, it provides an option to antialias the edges for smoother visuals.","type":"text"}]},{"level":1,"type":"heading","text":"Example","anchor":"Example"},{"code":["Text(\"Hello, World!\")","    .cornerRadius(radius: 10, antialiased: true)"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/cornerradius(radius:antialiased:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/cornerRadius(radius:antialiased:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cornerRadius","kind":"identifier"},{"kind":"text","text":"("},{"text":"radius","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"antialiased"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage\/cornerradius(radius:antialiased:)","title":"cornerRadius(radius:antialiased:)","role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadius(radius:antialiased:)","kind":"symbol","abstract":[{"type":"text","text":"Applies a corner radius to a view."}],"type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","abstract":[],"role":"collectionGroup"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"title":"RSCacheAsyncImage","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"type":"text","text":" "},{"text":"Note that the cache is in-memory meaning that on app restart, there will be no cache","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"kind":"symbol","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","abstract":[],"type":"topic"}}}