{"abstract":[{"type":"text","text":"Applies a corner radius and border to a view."}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cornerRadiusWithBorder"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"text":"borderLineWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":" = 1, ","kind":"text"},{"kind":"externalParam","text":"borderColor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV"},{"text":" = .gray, ","kind":"text"},{"text":"antialiased","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The radius to use when rounding the corners of the view. A value of "},{"type":"codeVoice","code":"0"},{"text":" results in squared corners.","type":"text"}],"type":"paragraph"}],"name":"radius"},{"name":"borderLineWidth","content":[{"inlineContent":[{"text":"The width of the border line. Defaults to ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"borderColor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The color of the border. Defaults to "},{"code":".gray","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"antialiased","content":[{"inlineContent":[{"type":"text","text":"A boolean value that determines whether the edges of the border should be antialiased, resulting in smoother edges. Defaults to "},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A view that rounds the original viewâ€™s corners and adds a border with the specified parameters.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This modifier rounds the corners of the underlying view to the specified radius and adds a border with a configurable line width and color. Additionally, it provides an option to antialias the edges for smoother visuals.","type":"text"}],"type":"paragraph"},{"text":"Example","type":"heading","anchor":"Example","level":1},{"code":["Text(\"Hello, World!\")","    .cornerRadiusWithBorder(radius: 10, borderLineWidth: 2, borderColor: .red)"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","symbolKind":"method","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cornerRadiusWithBorder","kind":"identifier"},{"kind":"text","text":"("},{"text":"radius","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderLineWidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"text":", ","kind":"text"},{"text":"borderColor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier","text":"Color"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"antialiased"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewP12RSEssentialsE22cornerRadiusWithBorder6radius15borderLineWidth0J5Color11antialiasedQr14CoreFoundation7CGFloatV_AlA0M0VSbtF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)":{"url":"\/documentation\/rsessentials\/rscacheasyncimage\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)","title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cornerRadiusWithBorder"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"borderLineWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderColor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"antialiased"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"text":"Applies a corner radius and border to a view.","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"type":"topic","title":"RSCacheAsyncImage","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RSCacheAsyncImage"}],"role":"symbol","url":"\/documentation\/rsessentials\/rscacheasyncimage","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"title":"RSEssentials","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","kind":"symbol","abstract":[],"role":"collection"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article"}}}