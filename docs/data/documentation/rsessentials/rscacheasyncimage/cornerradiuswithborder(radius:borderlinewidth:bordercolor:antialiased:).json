{"hierarchy":{"paths":[["doc:\/\/RSEssentials\/documentation\/RSEssentials","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cornerRadiusWithBorder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"radius","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"borderLineWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":" = 1, "},{"kind":"externalParam","text":"borderColor"},{"text":": ","kind":"text"},{"text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier"},{"kind":"text","text":" = .gray, "},{"text":"antialiased","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The radius to use when rounding the corners of the view. A value of "},{"code":"0","type":"codeVoice"},{"type":"text","text":" results in squared corners."}]}],"name":"radius"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The width of the border line. Defaults to ","type":"text"},{"type":"codeVoice","code":"1"},{"text":".","type":"text"}]}],"name":"borderLineWidth"},{"name":"borderColor","content":[{"inlineContent":[{"type":"text","text":"The color of the border. Defaults to "},{"code":".gray","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"antialiased","content":[{"type":"paragraph","inlineContent":[{"text":"A boolean value that determines whether the edges of the border should be antialiased, resulting in smoother edges. Defaults to ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A view that rounds the original viewâ€™s corners and adds a border with the specified parameters.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This modifier rounds the corners of the underlying view to the specified radius and adds a border with a configurable line width and color. Additionally, it provides an option to antialias the edges for smoother visuals."}]},{"text":"Example","anchor":"Example","type":"heading","level":1},{"syntax":"swift","code":["Text(\"Hello, World!\")","    .cornerRadiusWithBorder(radius: 10, borderLineWidth: 2, borderColor: .red)"],"type":"codeListing"}]}],"abstract":[{"text":"Applies a corner radius and border to a view.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)"]}],"identifier":{"url":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"symbolKind":"method","title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","externalID":"s:7SwiftUI4ViewP12RSEssentialsE22cornerRadiusWithBorder6radius15borderLineWidth0J5Color11antialiasedQr14CoreFoundation7CGFloatV_AlA0M0VSbtF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cornerRadiusWithBorder","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"text":"borderLineWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"text":"borderColor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier","text":"Color"},{"kind":"text","text":", "},{"kind":"externalParam","text":"antialiased"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUI"},"references":{"doc://RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)":{"role":"symbol","url":"\/documentation\/rsessentials\/rscacheasyncimage\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)","type":"topic","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","abstract":[{"text":"Applies a corner radius and border to a view.","type":"text"}],"kind":"symbol","title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cornerRadiusWithBorder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"radius","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"text":"borderLineWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderColor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"antialiased"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."}],"navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage","title":"RSCacheAsyncImage","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSCacheAsyncImage"}]},"doc://RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","title":"View Implementations","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","role":"collectionGroup"},"doc://RSEssentials/documentation/RSEssentials":{"role":"collection","abstract":[],"identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials","kind":"symbol","url":"\/documentation\/rsessentials","type":"topic","title":"RSEssentials"}}}