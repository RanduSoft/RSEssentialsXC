{"abstract":[{"type":"text","text":"Conditionally applies a transformation to the view based on a boolean condition."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","title":"if(_:transform:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftUI","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"<"},{"text":"Transform","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"transform","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Transform","preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/if(_:transform:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/if(_:transform:)"]}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`if`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Transform"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"condition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Transform","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Transform","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The modified view."}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"condition: A boolean value indicating whether the transformation should be applied."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"transform: A closure that takes the current view as input and returns a transformed view.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"⚠️ This have drawbacks including breaking animations. More details "},{"identifier":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"sections":[],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","type":"topic","url":"\/documentation\/rsessentials","kind":"symbol","abstract":[],"title":"RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","role":"collectionGroup","title":"View Implementations","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"text":" ","type":"text"},{"type":"text","text":"Note that the cache is in-memory meaning that on app restart, there will be no cache"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","title":"RSCacheAsyncImage","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/if(_:transform:)":{"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/if(_:transform:)","role":"symbol","abstract":[{"type":"text","text":"Conditionally applies a transformation to the view based on a boolean condition."}],"title":"if(_:transform:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/if(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`if`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Transform"},{"text":">(","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Transform","preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol"},"https://www.objc.io/blog/2021/08/24/conditional-view-modifiers/":{"identifier":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/","title":"here","type":"link","titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/"}}}