{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyboardPublisher"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" emitting "},{"type":"codeVoice","code":"Bool"},{"text":" values where ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" indicates the keyboard will show and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" indicates it will hide."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Description:","type":"text"},{"type":"text","text":" "},{"text":"This publisher listens for both ","type":"text"},{"code":"keyboardWillShowNotification","type":"codeVoice"},{"type":"text","text":" and "},{"code":"keyboardWillHideNotification","type":"codeVoice"},{"text":" notifications.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It emits "},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the keyboard is about to be shown, and "},{"code":"false","type":"codeVoice"},{"type":"text","text":" when itâ€™s about to be hidden."},{"text":" ","type":"text"},{"text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values.","type":"text"}]}]}]}]}],"metadata":{"extendedModule":"SwiftUICore","roleHeading":"Instance Property","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","title":"keyboardPublisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"RSEssentials"}],"role":"symbol","symbolKind":"property"},"abstract":[{"type":"text","text":"An "},{"code":"AnyPublisher","type":"codeVoice"},{"text":" that emits a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"sections":[],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/keyboardPublisher":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"text":" that emits a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"type":"topic","kind":"symbol","title":"keyboardPublisher","url":"\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher","role":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"kind":"symbol","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","abstract":[],"type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","abstract":[],"role":"collectionGroup"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSCacheAsyncImage"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"type":"text","text":" "},{"text":"Note that the cache is in-memory meaning that on app restart, there will be no cache","type":"text"}],"type":"topic","kind":"symbol","title":"RSCacheAsyncImage","navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","role":"symbol"}}}