{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":"> { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" emitting "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" values where "},{"type":"codeVoice","code":"true"},{"type":"text","text":" indicates the keyboard will show and "},{"code":"false","type":"codeVoice"},{"text":" indicates it will hide.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Description:"},{"text":" ","type":"text"},{"type":"text","text":"This publisher listens for both "},{"type":"codeVoice","code":"keyboardWillShowNotification"},{"text":" and ","type":"text"},{"code":"keyboardWillHideNotification","type":"codeVoice"},{"text":" notifications.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It emits "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when the keyboard is about to be shown, and "},{"type":"codeVoice","code":"false"},{"text":" when itâ€™s about to be hidden.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values."}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher"]}],"kind":"symbol","identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","interfaceLanguage":"swift"},"abstract":[{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"type":"text","text":" that emits a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"sections":[],"metadata":{"roleHeading":"Instance Property","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"extendedModule":"SwiftUI","modules":[{"relatedModules":["SwiftUI"],"name":"RSEssentials"}],"title":"keyboardPublisher","symbolKind":"property"},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/keyboardPublisher":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","abstract":[{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"type":"text","text":" that emits a "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"type":"topic","kind":"symbol","title":"keyboardPublisher","role":"symbol","url":"\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"text":">","kind":"text"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"type":"topic","title":"RSEssentials","role":"collection","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","role":"symbol","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSCacheAsyncImage"}],"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage","title":"RSCacheAsyncImage"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","abstract":[]}}}