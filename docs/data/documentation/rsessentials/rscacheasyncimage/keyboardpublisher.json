{"metadata":{"role":"symbol","roleHeading":"Instance Property","modules":[{"name":"RSEssentials","relatedModules":["SwiftUICore"]}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyboardPublisher"},{"kind":"text","text":": "},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"Never","preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","symbolKind":"property","title":"keyboardPublisher"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" that emits a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"An "},{"code":"AnyPublisher","type":"codeVoice"},{"text":" emitting ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" values where "},{"type":"codeVoice","code":"true"},{"type":"text","text":" indicates the keyboard will show and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" indicates it will hide."}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Description:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This publisher listens for both "},{"type":"codeVoice","code":"keyboardWillShowNotification"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"keyboardWillHideNotification"},{"text":" notifications.","type":"text"},{"type":"text","text":" "},{"text":"It emits ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" when the keyboard is about to be shown, and ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" when itâ€™s about to be hidden.","type":"text"},{"type":"text","text":" "},{"text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher"]}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"sections":[],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/keyboardPublisher":{"url":"\/documentation\/rsessentials\/rscacheasyncimage\/keyboardpublisher","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" that emits a "},{"code":"Bool","type":"codeVoice"},{"text":" indicating the visibility status of the keyboard.","type":"text"}],"type":"topic","title":"keyboardPublisher","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/keyboardPublisher","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"role":"symbol","title":"RSCacheAsyncImage","navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RSCacheAsyncImage","kind":"identifier"}],"abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"text":" ","type":"text"},{"type":"text","text":"Note that the cache is in-memory meaning that on app restart, there will be no cache"}],"kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","title":"RSEssentials","abstract":[],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/rsessentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","type":"topic","abstract":[],"url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","role":"collectionGroup","kind":"article"}}}