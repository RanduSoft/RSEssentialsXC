{"metadata":{"role":"symbol","title":"onReceive(_:center:object:perform:)","modules":[{"relatedModules":["SwiftUI"],"name":"RSEssentials"}],"externalID":"s:7SwiftUI4ViewP12RSEssentialsE9onReceive_6center6object7performQrSo18NSNotificationNamea_So0J6CenterCyXlSgy10Foundation12NotificationVctF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","roleHeading":"Instance Method","extendedModule":"SwiftUI","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onReceive"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"center","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NotificationCenter","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"object"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onReceive"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"name","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"kind":"text","text":", "},{"text":"center","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter"},{"text":" = .default, ","kind":"text"},{"text":"object","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AnyObject","kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta"},{"text":"? = nil, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of the notification for which to register the observer."}]}],"name":"name"},{"content":[{"inlineContent":[{"type":"text","text":"The notification center to add the observer to. The default is "},{"type":"codeVoice","code":"NotificationCenter.default"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"center"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object whose notifications the observer wants to receive; pass "},{"code":"nil","type":"codeVoice"},{"text":" to receive","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"notifications from any object."}]}],"name":"object"},{"name":"perform","content":[{"type":"paragraph","inlineContent":[{"text":"The closure to execute when the notification is received. The closure takes a single","type":"text"},{"type":"text","text":" "},{"code":"Notification","type":"codeVoice"},{"type":"text","text":" instance as its parameter."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A view that triggers ","type":"text"},{"code":"perform","type":"codeVoice"},{"type":"text","text":" when notifications of type "},{"code":"name","type":"codeVoice"},{"text":" are received.","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Adds an observer to the notification center to receive notifications of the specified type."},{"type":"text","text":" "},{"text":"When a notification is received, the specified action is performed. This modifier can be","type":"text"},{"text":" ","type":"text"},{"text":"applied to any view, and it returns a new view that includes the behavior.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":"swift","type":"codeListing","code":["Text(\"Example\")","    .onReceive(.myCustomNotification) { notification in","        print(\"Notification received: \\(notification)\")","    }"]}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"title":"RSCacheAsyncImage","url":"\/documentation\/rsessentials\/rscacheasyncimage","role":"symbol","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"type":"text","text":" "},{"text":"Note that the cache is in-memory meaning that on app restart, there will be no cache","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}],"navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"type":"topic","title":"View Implementations","role":"collectionGroup","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/onReceive(_:center:object:perform:)":{"title":"onReceive(_:center:object:perform:)","kind":"symbol","abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onReceive"},{"kind":"text","text":"("},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":".","kind":"text"},{"text":"Name","preciseIdentifier":"s:10Foundation12NotificationV4Namea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"text":": ","kind":"text"},{"text":"NotificationCenter","preciseIdentifier":"c:objc(cs)NSNotificationCenter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"object","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)","role":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","kind":"symbol","title":"RSEssentials","type":"topic","abstract":[]}}}