{"abstract":[{"type":"text","text":"Registers to receive notifications of the specified type using a publisher."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onReceive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"name"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNotificationCenter","kind":"typeIdentifier","text":"NotificationCenter"},{"kind":"text","text":" = .default, "},{"text":"object","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier","text":"Notification"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The name of the notification for which to register the observer.","type":"text"}],"type":"paragraph"}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The notification center to add the observer to. The default is "},{"code":"NotificationCenter.default","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"center"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object whose notifications the observer wants to receive; pass "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to receive"},{"type":"text","text":" "},{"type":"text","text":"notifications from any object."}]}],"name":"object"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure to execute when the notification is received. The closure takes a single"},{"type":"text","text":" "},{"type":"codeVoice","code":"Notification"},{"type":"text","text":" instance as its parameter."}]}],"name":"perform"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A view that triggers "},{"type":"codeVoice","code":"perform"},{"text":" when notifications of type ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" are received.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Adds an observer to the notification center to receive notifications of the specified type.","type":"text"},{"text":" ","type":"text"},{"text":"When a notification is received, the specified action is performed. This modifier can be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"applied to any view, and it returns a new view that includes the behavior."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"swift","code":["Text(\"Example\")","    .onReceive(.myCustomNotification) { notification in","        print(\"Notification received: \\(notification)\")","    }"]}]}]}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"onReceive(_:center:object:perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier","text":"Notification"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"text":": ","kind":"text"},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"object"},{"text":": ","kind":"text"},{"text":"AnyObject","kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":"?, "},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"modules":[{"relatedModules":["SwiftUI"],"name":"RSEssentials"}],"extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewP12RSEssentialsE9onReceive_6center6object7performQrSo18NSNotificationNamea_So0J6CenterCyXlSgy10Foundation12NotificationVctF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"title":"RSCacheAsyncImage","url":"\/documentation\/rsessentials\/rscacheasyncimage","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","abstract":[{"text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that the cache is in-memory meaning that on app restart, there will be no cache"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"title":"RSEssentials","abstract":[],"role":"collection","url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","type":"topic","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","title":"View Implementations"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/onReceive(_:center:object:perform:)":{"kind":"symbol","abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"center","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"text":", ","kind":"text"},{"text":"object","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","title":"onReceive(_:center:object:perform:)","url":"\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)"}}}