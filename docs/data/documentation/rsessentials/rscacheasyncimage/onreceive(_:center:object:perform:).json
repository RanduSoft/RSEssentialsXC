{"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP12RSEssentialsE9onReceive_6center6object7performQrSo18NSNotificationNamea_So0J6CenterCyXlSgy10Foundation12NotificationVctF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","extendedModule":"SwiftUI","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"title":"onReceive(_:center:object:perform:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onReceive"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"kind":"text","text":": "},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"kind":"text","text":", "},{"text":"object","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onReceive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"name"},{"kind":"text","text":": "},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":".","kind":"text"},{"text":"Name","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter","kind":"typeIdentifier"},{"kind":"text","text":" = .default, "},{"text":"object","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier","text":"Notification"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The name of the notification for which to register the observer."}],"type":"paragraph"}],"name":"name"},{"name":"center","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The notification center to add the observer to. The default is "},{"type":"codeVoice","code":"NotificationCenter.default"},{"text":".","type":"text"}]}]},{"name":"object","content":[{"type":"paragraph","inlineContent":[{"text":"The object whose notifications the observer wants to receive; pass ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to receive"},{"type":"text","text":" "},{"text":"notifications from any object.","type":"text"}]}]},{"name":"perform","content":[{"inlineContent":[{"text":"The closure to execute when the notification is received. The closure takes a single","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Notification"},{"type":"text","text":" instance as its parameter."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A view that triggers ","type":"text"},{"type":"codeVoice","code":"perform"},{"text":" when notifications of type ","type":"text"},{"type":"codeVoice","code":"name"},{"text":" are received.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Adds an observer to the notification center to receive notifications of the specified type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When a notification is received, the specified action is performed. This modifier can be"},{"text":" ","type":"text"},{"type":"text","text":"applied to any view, and it returns a new view that includes the behavior."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"syntax":"swift","code":["Text(\"Example\")","    .onReceive(.myCustomNotification) { notification in","        print(\"Notification received: \\(notification)\")","    }"],"type":"codeListing"}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Registers to receive notifications of the specified type using a publisher."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)"]}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","interfaceLanguage":"swift"},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","role":"collectionGroup","title":"View Implementations","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","type":"topic","url":"\/documentation\/rsessentials","kind":"symbol","abstract":[],"title":"RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/onReceive(_:center:object:perform:)":{"url":"\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","role":"symbol","abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"title":"onReceive(_:center:object:perform:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"text":": ","kind":"text"},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"text":", ","kind":"text"},{"text":"object","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject"},{"text":"?, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"RSCacheAsyncImage","kind":"identifier"}],"abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"text":" ","type":"text"},{"type":"text","text":"Note that the cache is in-memory meaning that on app restart, there will be no cache"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","title":"RSCacheAsyncImage","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}]}}}