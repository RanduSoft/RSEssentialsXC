{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Registers to receive notifications of the specified type using a publisher."}],"sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP12RSEssentialsE9onReceive_6center6object7performQrSo18NSNotificationNamea_So0J6CenterCyXlSgy10Foundation12NotificationVctF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","modules":[{"name":"RSEssentials","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","symbolKind":"method","title":"onReceive(_:center:object:perform:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onReceive"},{"text":"(","kind":"text"},{"text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation12NotificationV4Namea","kind":"typeIdentifier","text":"Name"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"object"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject"},{"kind":"text","text":"?, "},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"name","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier","text":"Notification"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"text":", ","kind":"text"},{"text":"center","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter","kind":"typeIdentifier"},{"text":" = .default, ","kind":"text"},{"kind":"externalParam","text":"object"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"The name of the notification for which to register the observer.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The notification center to add the observer to. The default is "},{"code":"NotificationCenter.default","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"center"},{"name":"object","content":[{"inlineContent":[{"type":"text","text":"The object whose notifications the observer wants to receive; pass "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to receive"},{"text":" ","type":"text"},{"text":"notifications from any object.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A view that triggers ","type":"text"},{"type":"codeVoice","code":"perform"},{"type":"text","text":" when notifications of type "},{"code":"name","type":"codeVoice"},{"type":"text","text":" are received."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Adds an observer to the notification center to receive notifications of the specified type.","type":"text"},{"type":"text","text":" "},{"text":"When a notification is received, the specified action is performed. This modifier can be","type":"text"},{"text":" ","type":"text"},{"text":"applied to any view, and it returns a new view that includes the behavior.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"code":["Text(\"Example\")","    .onReceive(.myCustomNotification) { notification in","        print(\"Notification received: \\(notification)\")","    }"],"type":"codeListing","syntax":"swift"}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/onReceive(_:center:object:perform:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":".","kind":"text"},{"text":"Name","preciseIdentifier":"s:10Foundation12NotificationV4Namea","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"center","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"object"},{"kind":"text","text":": "},{"text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"kind":"symbol","title":"onReceive(_:center:object:perform:)","role":"symbol","url":"\/documentation\/rsessentials\/rscacheasyncimage\/onreceive(_:center:object:perform:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onReceive(_:center:object:perform:)"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","abstract":[],"role":"collectionGroup"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"title":"RSCacheAsyncImage","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"type":"text","text":" "},{"text":"Note that the cache is in-memory meaning that on app restart, there will be no cache","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"kind":"symbol","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","abstract":[],"type":"topic"}}}