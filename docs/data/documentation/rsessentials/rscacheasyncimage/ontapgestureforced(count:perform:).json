{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rscacheasyncimage\/ontapgestureforced(count:perform:)"]}],"metadata":{"title":"onTapGestureForced(count:perform:)","symbolKind":"method","platforms":[{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0"}],"extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onTapGestureForced"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"role":"symbol","externalID":"s:7SwiftUI4ViewP12RSEssentialsE18onTapGestureForced5count7performQrSi_yyctF::SYNTHESIZED::s:12RSEssentials17RSCacheAsyncImageV","modules":[{"name":"RSEssentials","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onTapGestureForced"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" = 1, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":" "},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of taps or clicks required to trigger the action","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure provided in "},{"code":"action","type":"codeVoice"},{"text":". Defaults to ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]}],"name":"count"},{"name":"action","content":[{"inlineContent":[{"text":"The action to perform.","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onTapGestureForced(count:perform:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations"]]},"abstract":[{"text":"Creates a rectangle view that will make the ","type":"text"},{"type":"codeVoice","code":"Spacer"},{"type":"text","text":"s elements trigger a tap as well. Then acts like "},{"type":"codeVoice","code":"onTapGesture(count: perform:)"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage":{"title":"RSCacheAsyncImage","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSCacheAsyncImage"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RSCacheAsyncImage","kind":"identifier"}],"url":"\/documentation\/rsessentials\/rscacheasyncimage","abstract":[{"type":"text","text":"A SwiftUI view that loads an image from a URL asynchronously with caching capabilities."},{"type":"text","text":" "},{"text":"Note that the cache is in-memory meaning that on app restart, there will be no cache","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/rsessentials\/rscacheasyncimage\/view-implementations","abstract":[],"role":"collectionGroup"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"kind":"symbol","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","abstract":[],"type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSCacheAsyncImage/onTapGestureForced(count:perform:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/rsessentials\/rscacheasyncimage\/ontapgestureforced(count:perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onTapGestureForced","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","title":"onTapGestureForced(count:perform:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSCacheAsyncImage\/onTapGestureForced(count:perform:)","abstract":[{"text":"Creates a rectangle view that will make the ","type":"text"},{"type":"codeVoice","code":"Spacer"},{"text":"s elements trigger a tap as well. Then acts like ","type":"text"},{"type":"codeVoice","code":"onTapGesture(count: perform:)"}]}}}