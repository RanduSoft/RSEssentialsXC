{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"getRandomFoodImageURL(handler:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","modules":[{"name":"RSEssentials"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?)","kind":"text"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"text":" if an error occurred.","type":"text"}]}],"name":"handler"}],"kind":"parameters"}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"type":"topic","title":"RSEssentials","role":"collection","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","title":"getRandomFoodImageURL(handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"abstract":[{"text":"A utility manager for fetching random images.","type":"text"}],"title":"RSMockManager","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"}}}