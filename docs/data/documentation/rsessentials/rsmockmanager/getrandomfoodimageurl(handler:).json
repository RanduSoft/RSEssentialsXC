{"abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"code":"String?","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"text":" if an error occurred.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"sections":[],"metadata":{"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","role":"symbol","symbolKind":"method","modules":[{"name":"RSEssentials"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"roleHeading":"Instance Method","title":"getRandomFoodImageURL(handler:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","type":"topic","abstract":[],"url":"\/documentation\/rsessentials","role":"collection","title":"RSEssentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"url":"\/documentation\/rsessentials\/rsmockmanager","kind":"symbol","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSMockManager","kind":"identifier"}],"title":"RSMockManager","type":"topic","role":"symbol","navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"role":"symbol","type":"topic","title":"getRandomFoodImageURL(handler:)","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"kind":"symbol"}}}