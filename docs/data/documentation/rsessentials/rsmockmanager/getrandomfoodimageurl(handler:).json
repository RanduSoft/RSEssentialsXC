{"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","symbolKind":"method","modules":[{"name":"RSEssentials"}],"title":"getRandomFoodImageURL(handler:)","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"type":"codeVoice","code":"String?"},{"type":"text","text":", where "},{"code":"String","type":"codeVoice"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"sections":[],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSMockManager"}],"type":"topic","title":"RSMockManager","abstract":[{"text":"A utility manager for fetching random images.","type":"text"}],"url":"\/documentation\/rsessentials\/rsmockmanager","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","type":"topic","url":"\/documentation\/rsessentials","kind":"symbol","abstract":[],"title":"RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"title":"getRandomFoodImageURL(handler:)"}}}