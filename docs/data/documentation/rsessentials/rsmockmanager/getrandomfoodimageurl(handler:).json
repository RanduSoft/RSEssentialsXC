{"metadata":{"roleHeading":"Instance Method","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","modules":[{"name":"RSEssentials"}],"role":"symbol","title":"getRandomFoodImageURL(handler:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"code":"nil","type":"codeVoice"},{"text":" if an error occurred.","type":"text"}]}],"name":"handler"}],"kind":"parameters"}],"abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"kind":"symbol","type":"topic","role":"symbol","title":"getRandomFoodImageURL(handler:)","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"role":"collection","url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","kind":"symbol","type":"topic","title":"RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"kind":"symbol","url":"\/documentation\/rsessentials\/rsmockmanager","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RSMockManager"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"type":"topic","title":"RSMockManager","abstract":[{"text":"A utility manager for fetching random images.","type":"text"}],"role":"symbol"}}}