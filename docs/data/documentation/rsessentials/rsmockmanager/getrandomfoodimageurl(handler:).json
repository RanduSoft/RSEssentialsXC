{"metadata":{"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","title":"getRandomFoodImageURL(handler:)","role":"symbol","modules":[{"name":"RSEssentials"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}]}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","title":"getRandomFoodImageURL(handler:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"role":"symbol","abstract":[{"text":"A utility manager for fetching random images.","type":"text"}],"kind":"symbol","url":"\/documentation\/rsessentials\/rsmockmanager","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"title":"RSMockManager","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RSMockManager"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"type":"topic","title":"RSEssentials","role":"collection","url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","abstract":[],"kind":"symbol"}}}