{"sections":[],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"RSEssentials"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","title":"getRandomFoodImageURL(handler:)"},"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" represents the image URL if available, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if an error occurred.","type":"text"}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","kind":"symbol","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"title":"getRandomFoodImageURL(handler:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"kind":"symbol","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","abstract":[],"type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"url":"\/documentation\/rsessentials\/rsmockmanager","role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","title":"RSMockManager","navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}]}}}