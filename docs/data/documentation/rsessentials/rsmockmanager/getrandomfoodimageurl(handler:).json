{"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}],"name":"handler"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","symbolKind":"method","title":"getRandomFoodImageURL(handler:)","role":"symbol","modules":[{"name":"RSEssentials"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}]},"sections":[],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"url":"\/documentation\/rsessentials","role":"collection","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","title":"RSEssentials","type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSMockManager","kind":"identifier"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}],"title":"RSMockManager","url":"\/documentation\/rsessentials\/rsmockmanager","role":"symbol","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"kind":"symbol","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","title":"getRandomFoodImageURL(handler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}],"type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","role":"symbol"}}}