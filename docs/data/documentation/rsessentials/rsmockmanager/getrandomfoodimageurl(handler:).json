{"metadata":{"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","title":"getRandomFoodImageURL(handler:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"modules":[{"name":"RSEssentials"}],"symbolKind":"method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"String"},{"text":" represents the image URL if available, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if an error occurred.","type":"text"}],"type":"paragraph"}]}]}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","kind":"symbol","title":"RSEssentials","type":"topic","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","url":"\/documentation\/rsessentials\/rsmockmanager","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}],"title":"RSMockManager"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"role":"symbol","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","kind":"symbol","type":"topic","title":"getRandomFoodImageURL(handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"}}}