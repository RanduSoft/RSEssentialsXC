{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"String"},{"text":" represents the image URL if available, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}]}],"kind":"parameters"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"metadata":{"modules":[{"name":"RSEssentials"}],"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","title":"getRandomFoodImageURL(handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method"},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"title":"RSEssentials","role":"collection","kind":"symbol","url":"\/documentation\/rsessentials","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"kind":"symbol","navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}],"abstract":[{"text":"A utility manager for fetching random images.","type":"text"}],"type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"url":"\/documentation\/rsessentials\/rsmockmanager","title":"RSMockManager"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"title":"getRandomFoodImageURL(handler:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","role":"symbol","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"kind":"symbol"}}}