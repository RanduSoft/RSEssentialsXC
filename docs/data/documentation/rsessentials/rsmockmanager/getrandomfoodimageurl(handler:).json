{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" represents the image URL if available, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}],"name":"handler"}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"metadata":{"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","modules":[{"name":"RSEssentials"}],"role":"symbol","title":"getRandomFoodImageURL(handler:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"kind":"symbol","references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?)","kind":"text"}],"url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","title":"getRandomFoodImageURL(handler:)","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","role":"symbol","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"url":"\/documentation\/rsessentials","abstract":[],"type":"topic","title":"RSEssentials","role":"collection","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"url":"\/documentation\/rsessentials\/rsmockmanager","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSMockManager"}],"navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"kind":"symbol","title":"RSMockManager"}}}