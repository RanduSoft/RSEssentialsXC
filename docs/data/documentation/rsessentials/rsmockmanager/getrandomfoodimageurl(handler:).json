{"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"languages":["swift"]}]},{"parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"code":"String?","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" represents the image URL if available, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if an error occurred.","type":"text"}]}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"kind":"symbol","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","role":"symbol","modules":[{"name":"RSEssentials"}],"symbolKind":"method","title":"getRandomFoodImageURL(handler:)"},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"type":"topic","kind":"symbol","abstract":[],"title":"RSEssentials","url":"\/documentation\/rsessentials","role":"collection","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"kind":"symbol","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSMockManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/rsessentials\/rsmockmanager","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"title":"RSMockManager"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"title":"getRandomFoodImageURL(handler:)","kind":"symbol","role":"symbol"}}}