{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"RSEssentials"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?)","kind":"text"}],"title":"getRandomFoodImageURL(handler:)","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"kind":"symbol","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRandomFoodImageURL","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if an error occurred."}]}],"name":"handler"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"]}],"sections":[],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","url":"\/documentation\/rsessentials","role":"collection","title":"RSEssentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"title":"getRandomFoodImageURL(handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?)"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSMockManager","kind":"identifier"}],"url":"\/documentation\/rsessentials\/rsmockmanager","navigatorTitle":[{"text":"RSMockManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","type":"topic","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"title":"RSMockManager"}}}