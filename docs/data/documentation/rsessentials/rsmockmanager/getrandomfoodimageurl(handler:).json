{"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"},"sections":[],"variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"RSEssentials"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"symbolKind":"method","role":"symbol","title":"getRandomFoodImageURL(handler:)","externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")?)"}]}],"kind":"declarations"},{"parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type "},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" represents the image URL if available, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if an error occurred."}],"type":"paragraph"}]}],"kind":"parameters"}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"type":"topic","url":"\/documentation\/rsessentials\/rsmockmanager","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager","title":"RSMockManager"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"title":"RSEssentials","abstract":[],"role":"collection","url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","type":"topic","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"kind":"symbol","title":"getRandomFoodImageURL(handler:)","type":"topic","role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)"}}}