{"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRandomFoodImageURL","kind":"identifier"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure to handle the result of the image URL request. The closure takes a single parameter of type ","type":"text"},{"type":"codeVoice","code":"String?"},{"text":", where ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" represents the image URL if available, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if an error occurred."}]}],"name":"handler"}]}],"sections":[],"variants":[{"paths":["\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Fetches a URL for a random food image.","type":"text"}],"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"RSEssentials"}],"title":"getRandomFoodImageURL(handler:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandomFoodImageURL"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"externalID":"s:12RSEssentials13RSMockManagerV21getRandomFoodImageURL7handleryySSSgcSg_tF"},"kind":"symbol","references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"abstract":[],"url":"\/documentation\/rsessentials","type":"topic","title":"RSEssentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","role":"collection","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager/getRandomFoodImageURL(handler:)":{"type":"topic","title":"getRandomFoodImageURL(handler:)","abstract":[{"type":"text","text":"Fetches a URL for a random food image."}],"url":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager\/getRandomFoodImageURL(handler:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandomFoodImageURL"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSMockManager":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RSMockManager","kind":"identifier"}],"title":"RSMockManager","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A utility manager for fetching random images."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSMockManager"}],"url":"\/documentation\/rsessentials\/rsmockmanager","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSMockManager"}}}