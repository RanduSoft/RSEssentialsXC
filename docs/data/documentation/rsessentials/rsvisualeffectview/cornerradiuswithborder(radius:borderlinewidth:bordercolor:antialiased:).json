{"hierarchy":{"paths":[["doc:\/\/RSEssentials\/documentation\/RSEssentials","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"metadata":{"symbolKind":"method","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewP12RSEssentialsE22cornerRadiusWithBorder6radius15borderLineWidth0J5Color11antialiasedQr14CoreFoundation7CGFloatV_AlA0M0VSbtF::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cornerRadiusWithBorder"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderLineWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"borderColor"},{"text":": ","kind":"text"},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV"},{"kind":"text","text":", "},{"text":"antialiased","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","roleHeading":"Instance Method","title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)"]}],"sections":[],"abstract":[{"type":"text","text":"Applies a corner radius and border to a view."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cornerRadiusWithBorder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"radius","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"kind":"text","text":", "},{"text":"borderLineWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":" = 1, "},{"text":"borderColor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier"},{"text":" = .gray, ","kind":"text"},{"text":"antialiased","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":" = true) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The radius to use when rounding the corners of the view. A value of ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" results in squared corners."}]}],"name":"radius"},{"name":"borderLineWidth","content":[{"inlineContent":[{"type":"text","text":"The width of the border line. Defaults to "},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The color of the border. Defaults to "},{"code":".gray","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"borderColor"},{"content":[{"inlineContent":[{"type":"text","text":"A boolean value that determines whether the edges of the border should be antialiased, resulting in smoother edges. Defaults to "},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"antialiased"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A view that rounds the original viewâ€™s corners and adds a border with the specified parameters."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This modifier rounds the corners of the underlying view to the specified radius and adds a border with a configurable line width and color. Additionally, it provides an option to antialias the edges for smoother visuals.","type":"text"}]},{"type":"heading","level":1,"anchor":"Example","text":"Example"},{"type":"codeListing","syntax":"swift","code":["Text(\"Hello, World!\")","    .cornerRadiusWithBorder(radius: 10, borderLineWidth: 2, borderColor: .red)"]}]}],"identifier":{"url":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","interfaceLanguage":"swift"},"references":{"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)":{"identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","abstract":[{"type":"text","text":"Applies a corner radius and border to a view."}],"type":"topic","title":"cornerRadiusWithBorder(radius:borderLineWidth:borderColor:antialiased:)","role":"symbol","url":"\/documentation\/rsessentials\/rsvisualeffectview\/cornerradiuswithborder(radius:borderlinewidth:bordercolor:antialiased:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cornerRadiusWithBorder"},{"kind":"text","text":"("},{"text":"radius","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderLineWidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"borderColor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier","text":"Color"},{"kind":"text","text":", "},{"text":"antialiased","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"kind":"symbol"},"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","title":"View Implementations","abstract":[]},"doc://RSEssentials/documentation/RSEssentials":{"abstract":[],"title":"RSEssentials","role":"collection","url":"\/documentation\/rsessentials","type":"topic","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials","kind":"symbol"},"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"UIViewRepresentable"},{"type":"text","text":" SwiftUI view that wraps a "},{"code":"UIVisualEffectView","type":"codeVoice"},{"type":"text","text":", providing a way to"},{"text":" ","type":"text"},{"type":"text","text":"use visual effects like blur and vibrancy in SwiftUI."}],"navigatorTitle":[{"text":"RSVisualEffectView","kind":"identifier"}],"type":"topic","url":"\/documentation\/rsessentials\/rsvisualeffectview","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSVisualEffectView","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"RSVisualEffectView"}}}