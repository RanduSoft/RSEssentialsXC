{"metadata":{"modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lF::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV","extendedModule":"SwiftUI","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"<"},{"text":"Transform","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Transform","preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"if(_:transform:)","roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`if`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transform"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"condition","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp","kind":"typeIdentifier","text":"Transform"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Transform","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The modified view.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"condition: A boolean value indicating whether the transformation should be applied."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"transform: A closure that takes the current view as input and returns a transformed view.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"⚠️ This have drawbacks including breaking animations. More details ","type":"text"},{"type":"reference","identifier":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/RSEssentials\/documentation\/RSEssentials","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"variants":[{"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/if(_:transform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Conditionally applies a transformation to the view based on a boolean condition."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/if(_:transform:)"},"references":{"https://www.objc.io/blog/2021/08/24/conditional-view-modifiers/":{"identifier":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/","title":"here","titleInlineContent":[{"text":"here","type":"text"}],"url":"https:\/\/www.objc.io\/blog\/2021\/08\/24\/conditional-view-modifiers\/","type":"link"},"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"role":"collectionGroup","title":"View Implementations","type":"topic","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","kind":"article","abstract":[]},"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView/if(_:transform:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`if`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Transform"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP12RSEssentialsE2if_9transformQrSb_qd__xXEtAaBRd__lFQO9Transformqd__mfp","kind":"typeIdentifier","text":"Transform"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/if(_:transform:)","abstract":[{"text":"Conditionally applies a transformation to the view based on a boolean condition.","type":"text"}],"type":"topic","kind":"symbol","title":"if(_:transform:)","role":"symbol","url":"\/documentation\/rsessentials\/rsvisualeffectview\/if(_:transform:)"},"doc://RSEssentials/documentation/RSEssentials":{"kind":"symbol","role":"collection","url":"\/documentation\/rsessentials","abstract":[],"title":"RSEssentials","type":"topic","identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials"},"doc://RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"identifier":"doc:\/\/RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"code":"UIViewRepresentable","type":"codeVoice"},{"type":"text","text":" SwiftUI view that wraps a "},{"type":"codeVoice","code":"UIVisualEffectView"},{"text":", providing a way to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use visual effects like blur and vibrancy in SwiftUI."}],"url":"\/documentation\/rsessentials\/rsvisualeffectview","kind":"symbol","title":"RSVisualEffectView","navigatorTitle":[{"text":"RSVisualEffectView","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSVisualEffectView"}]}}}