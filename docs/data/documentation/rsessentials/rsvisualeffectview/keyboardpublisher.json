{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"An "},{"code":"AnyPublisher","type":"codeVoice"},{"type":"text","text":" emitting "},{"code":"Bool","type":"codeVoice"},{"text":" values where ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" indicates the keyboard will show and "},{"type":"codeVoice","code":"false"},{"text":" indicates it will hide.","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Description:"},{"type":"text","text":" "},{"text":"This publisher listens for both ","type":"text"},{"type":"codeVoice","code":"keyboardWillShowNotification"},{"type":"text","text":" and "},{"type":"codeVoice","code":"keyboardWillHideNotification"},{"type":"text","text":" notifications."},{"type":"text","text":" "},{"text":"It emits ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the keyboard is about to be shown, and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" when itâ€™s about to be hidden."},{"text":" ","type":"text"},{"text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher"]}],"metadata":{"role":"symbol","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV","modules":[{"relatedModules":["SwiftUICore"],"name":"RSEssentials"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"roleHeading":"Instance Property","title":"keyboardPublisher","symbolKind":"property","extendedModule":"SwiftUICore"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" that emits a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","type":"topic","abstract":[],"url":"\/documentation\/rsessentials","role":"collection","title":"RSEssentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RSVisualEffectView"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RSVisualEffectView"}],"title":"RSVisualEffectView","role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","url":"\/documentation\/rsessentials\/rsvisualeffectview","abstract":[{"text":"A ","type":"text"},{"code":"UIViewRepresentable","type":"codeVoice"},{"text":" SwiftUI view that wraps a ","type":"text"},{"code":"UIVisualEffectView","type":"codeVoice"},{"text":", providing a way to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use visual effects like blur and vibrancy in SwiftUI."}],"type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/keyboardPublisher":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher","abstract":[{"type":"text","text":"An "},{"code":"AnyPublisher","type":"codeVoice"},{"type":"text","text":" that emits a "},{"code":"Bool","type":"codeVoice"},{"text":" indicating the visibility status of the keyboard.","type":"text"}],"type":"topic","role":"symbol","title":"keyboardPublisher","url":"\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","kind":"article","abstract":[],"url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","type":"topic","role":"collectionGroup"}}}