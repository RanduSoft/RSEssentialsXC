{"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyboardPublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier","text":"Never"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"text":" emitting ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" values where "},{"code":"true","type":"codeVoice"},{"type":"text","text":" indicates the keyboard will show and "},{"code":"false","type":"codeVoice"},{"text":" indicates it will hide.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Description:","type":"text"},{"text":" ","type":"text"},{"text":"This publisher listens for both ","type":"text"},{"type":"codeVoice","code":"keyboardWillShowNotification"},{"type":"text","text":" and "},{"code":"keyboardWillHideNotification","type":"codeVoice"},{"text":" notifications.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It emits "},{"type":"codeVoice","code":"true"},{"text":" when the keyboard is about to be shown, and ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" when itâ€™s about to be hidden.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values."}]}]}]}]}],"variants":[{"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"text":" that emits a ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"metadata":{"extendedModule":"SwiftUICore","role":"symbol","modules":[{"name":"RSEssentials","relatedModules":["SwiftUICore"]}],"symbolKind":"property","roleHeading":"Instance Property","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV","title":"keyboardPublisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":">"}]},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"View Implementations","url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","kind":"article"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","title":"RSEssentials","abstract":[],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/rsessentials"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/keyboardPublisher":{"url":"\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher","type":"topic","kind":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyboardPublisher","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier","text":"Never"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" that emits a "},{"code":"Bool","type":"codeVoice"},{"text":" indicating the visibility status of the keyboard.","type":"text"}],"title":"keyboardPublisher"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","title":"RSVisualEffectView","abstract":[{"type":"text","text":"A "},{"code":"UIViewRepresentable","type":"codeVoice"},{"text":" SwiftUI view that wraps a ","type":"text"},{"type":"codeVoice","code":"UIVisualEffectView"},{"type":"text","text":", providing a way to"},{"text":" ","type":"text"},{"type":"text","text":"use visual effects like blur and vibrancy in SwiftUI."}],"type":"topic","navigatorTitle":[{"text":"RSVisualEffectView","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSVisualEffectView"}],"url":"\/documentation\/rsessentials\/rsvisualeffectview"}}}