{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyboardPublisher","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" emitting "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" values where "},{"type":"codeVoice","code":"true"},{"type":"text","text":" indicates the keyboard will show and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" indicates it will hide."}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Description:"},{"type":"text","text":" "},{"text":"This publisher listens for both ","type":"text"},{"code":"keyboardWillShowNotification","type":"codeVoice"},{"type":"text","text":" and "},{"code":"keyboardWillHideNotification","type":"codeVoice"},{"text":" notifications.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It emits "},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the keyboard is about to be shown, and "},{"code":"false","type":"codeVoice"},{"type":"text","text":" when itâ€™s about to be hidden."},{"text":" ","type":"text"},{"type":"text","text":"A debounce is added to handle rapid keyboard status changes, reducing noise in the emitted values."}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher"]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"RSEssentials"}],"roleHeading":"Instance Property","role":"symbol","externalID":"s:7SwiftUI4ViewP12RSEssentialsE17keyboardPublisher7Combine03AnyF0VySbs5NeverOGvp::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV","title":"keyboardPublisher","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"Never","preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"SwiftUICore"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher"},"abstract":[{"text":"An ","type":"text"},{"code":"AnyPublisher","type":"codeVoice"},{"type":"text","text":" that emits a "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"role":"collection","type":"topic","title":"RSEssentials","url":"\/documentation\/rsessentials","abstract":[],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","title":"View Implementations","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","type":"topic"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/keyboardPublisher":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyboardPublisher"},{"text":": ","kind":"text"},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/keyboardPublisher","abstract":[{"type":"text","text":"An "},{"code":"AnyPublisher","type":"codeVoice"},{"text":" that emits a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" indicating the visibility status of the keyboard."}],"kind":"symbol","role":"symbol","title":"keyboardPublisher","url":"\/documentation\/rsessentials\/rsvisualeffectview\/keyboardpublisher"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RSVisualEffectView","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RSVisualEffectView"}],"kind":"symbol","url":"\/documentation\/rsessentials\/rsvisualeffectview","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"UIViewRepresentable"},{"text":" SwiftUI view that wraps a ","type":"text"},{"code":"UIVisualEffectView","type":"codeVoice"},{"text":", providing a way to","type":"text"},{"text":" ","type":"text"},{"text":"use visual effects like blur and vibrancy in SwiftUI.","type":"text"}],"title":"RSVisualEffectView","role":"symbol"}}}