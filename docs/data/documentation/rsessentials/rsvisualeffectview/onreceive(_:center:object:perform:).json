{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"name"},{"text":": ","kind":"text"},{"text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"kind":"text","text":", "},{"text":"center","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNotificationCenter","text":"NotificationCenter","kind":"typeIdentifier"},{"kind":"text","text":" = .default, "},{"kind":"externalParam","text":"object"},{"text":": ","kind":"text"},{"text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of the notification for which to register the observer."}]}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The notification center to add the observer to. The default is "},{"code":"NotificationCenter.default","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"center"},{"content":[{"inlineContent":[{"text":"The object whose notifications the observer wants to receive; pass ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to receive","type":"text"},{"type":"text","text":" "},{"text":"notifications from any object.","type":"text"}],"type":"paragraph"}],"name":"object"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure to execute when the notification is received. The closure takes a single","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Notification"},{"text":" instance as its parameter.","type":"text"}]}],"name":"perform"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A view that triggers "},{"type":"codeVoice","code":"perform"},{"text":" when notifications of type ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" are received."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Adds an observer to the notification center to receive notifications of the specified type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When a notification is received, the specified action is performed. This modifier can be"},{"type":"text","text":" "},{"text":"applied to any view, and it returns a new view that includes the behavior.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"swift","code":["Text(\"Example\")","    .onReceive(.myCustomNotification) { notification in","        print(\"Notification received: \\(notification)\")","    }"]}]}]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Registers to receive notifications of the specified type using a publisher."}],"metadata":{"extendedModule":"SwiftUI","roleHeading":"Instance Method","title":"onReceive(_:center:object:perform:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV4Namea","text":"Name"},{"kind":"text","text":", "},{"kind":"externalParam","text":"center"},{"kind":"text","text":": "},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"object"},{"kind":"text","text":": "},{"text":"AnyObject","kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Notification","preciseIdentifier":"s:10Foundation12NotificationV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"RSEssentials","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewP12RSEssentialsE9onReceive_6center6object7performQrSo18NSNotificationNamea_So0J6CenterCyXlSgy10Foundation12NotificationVctF::SYNTHESIZED::s:12RSEssentials18RSVisualEffectViewV"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rsessentials\/rsvisualeffectview\/onreceive(_:center:object:perform:)"]}],"identifier":{"url":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/onReceive(_:center:object:perform:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations"]]},"references":{"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSVisualEffectView","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"UIViewRepresentable","type":"codeVoice"},{"text":" SwiftUI view that wraps a ","type":"text"},{"type":"codeVoice","code":"UIVisualEffectView"},{"text":", providing a way to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use visual effects like blur and vibrancy in SwiftUI."}],"identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView","url":"\/documentation\/rsessentials\/rsvisualeffectview","type":"topic","title":"RSVisualEffectView","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RSVisualEffectView","kind":"identifier"}]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials":{"type":"topic","title":"RSEssentials","role":"collection","url":"\/documentation\/rsessentials","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials","abstract":[],"kind":"symbol"},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/View-Implementations":{"title":"View Implementations","type":"topic","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/View-Implementations","url":"\/documentation\/rsessentials\/rsvisualeffectview\/view-implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://ro.randusoft.RSEssentials/documentation/RSEssentials/RSVisualEffectView/onReceive(_:center:object:perform:)":{"url":"\/documentation\/rsessentials\/rsvisualeffectview\/onreceive(_:center:object:perform:)","title":"onReceive(_:center:object:perform:)","type":"topic","abstract":[{"text":"Registers to receive notifications of the specified type using a publisher.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onReceive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Notification","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV"},{"kind":"text","text":"."},{"text":"Name","preciseIdentifier":"s:10Foundation12NotificationV4Namea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"center"},{"text":": ","kind":"text"},{"text":"NotificationCenter","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNotificationCenter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"object"},{"kind":"text","text":": "},{"text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12NotificationV","text":"Notification"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"role":"symbol","identifier":"doc:\/\/ro.randusoft.RSEssentials\/documentation\/RSEssentials\/RSVisualEffectView\/onReceive(_:center:object:perform:)","kind":"symbol"}}}