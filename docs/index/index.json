{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/alwayspresentvcsasmodals","title":"var alwaysPresentVCsAsModals: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/explicitbackbutton","title":"var explicitBackButton: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fixnavbarsinios15","title":"var fixNavBarsIniOS15: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fixtabbarsinios15","title":"var fixTabBarsIniOS15: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fixtableviewinios15","title":"var fixTableViewIniOS15: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fixwindowbackgroundcolor","title":"var fixWindowBackgroundColor: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/addclosebutton(onrightside:useicon:)","title":"func addCloseButton(onRightSide: Bool, useIcon: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/addfakebackbutton()","title":"func addFakeBackButton()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fakebackbuttonaction()","title":"func fakeBackButtonAction()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fixios15annoyances()","title":"func fixiOS15annoyances()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/hidenavbar(animated:)","title":"func hideNavBar(animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/setnavbarvisible(_:animated:)","title":"func setNavBarVisible(Bool, animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/setupbindings()","title":"func setupBindings()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/shownavbar(animated:)","title":"func showNavBar(animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/updatelanguagestrings()","title":"func updateLanguageStrings()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/storyboardname","title":"class var storyboardName: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/viewcontrollerid","title":"class var viewControllerId: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/fromstoryboard()","title":"class func fromStoryboard() -> Self","type":"method"},{"path":"\/documentation\/rsessentials\/rsbaseviewcontroller\/innavigationcontroller()","title":"class func inNavigationController() -> UINavigationController","type":"method"}],"path":"\/documentation\/rsessentials\/rsbaseviewcontroller","title":"RSBaseViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/blurstyle","title":"var blurStyle: UIBlurEffect.Style","type":"property"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/closebuttontag","title":"var closeButtonTag: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/contentviewtag","title":"var contentViewTag: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/hideanimationtime","title":"var hideAnimationTime: Double","type":"property"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/preferredstatusbarstyle","title":"var preferredStatusBarStyle: UIStatusBarStyle","type":"property"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/showanimationtime","title":"var showAnimationTime: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/closeaction()","title":"func closeAction()","type":"method"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/hideview(completion:)","title":"func hideView(completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/rsblurredmodalvc\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/rsessentials\/rsblurredmodalvc","title":"RSBlurredModalVC","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/deletealllogs()","title":"func deleteAllLogs()","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/exportlogs()","title":"func exportLogs()","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/exportlogs(fromnavitem:)","title":"func exportLogs(fromNavItem: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/exportlogs(fromview:)","title":"func exportLogs(fromView: UIView)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logdebug(_:)","title":"func logDebug(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logdebug(category:_:)","title":"func logDebug(category: String, String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logerror(_:)","title":"func logError(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logerror(category:_:)","title":"func logError(category: String, String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/loginfo(_:)","title":"func logInfo(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/loginfo(category:_:)","title":"func logInfo(category: String, String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/loglocalizables(_:)","title":"func logLocalizables(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logwarning(_:)","title":"func logWarning(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/logwarning(category:_:)","title":"func logWarning(category: String, String)","type":"method"},{"path":"\/documentation\/rsessentials\/rslogger\/setup(_:style:logtofile:)","title":"func setup(LogLevel, style: LogStyle, logToFile: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/shared","title":"static let shared: RSLogger","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/localizables","title":"case localizables","type":"case"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/rsessentials\/rslogger\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rslogger\/loglevel","title":"RSLogger.LogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/logstyle\/explicit","title":"case explicit","type":"case"},{"path":"\/documentation\/rsessentials\/rslogger\/logstyle\/symbols","title":"case symbols","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslogger\/logstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/rslogger\/logstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rslogger\/logstyle","title":"RSLogger.LogStyle","type":"enum"}],"path":"\/documentation\/rsessentials\/rslogger","title":"RSLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/personaltag","title":"var personalTag: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/view","title":"var view: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/dismissaspopover(animated:completion:)","title":"func dismissAsPopover(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/rsessentials\/rsnibloadingview\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/rsessentials\/rsnibloadingview","title":"RSNibLoadingView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rspasswordmanager\/generatebasicpassword()","title":"func generateBasicPassword() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rspasswordmanager\/generatecomplexpassword()","title":"func generateComplexPassword() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rspasswordmanager\/generatepassword(includenumbers:includepunctuation:includesymbols:length:)","title":"func generatePassword(includeNumbers: Bool, includePunctuation: Bool, includeSymbols: Bool, length: Int) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rspasswordmanager\/passwordisleaked(_:showhud:handler:)","title":"func passwordIsLeaked(String, showHUD: Bool, handler: ((Bool?) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rspasswordmanager\/shared","title":"static let shared: RSPasswordManager","type":"property"}],"path":"\/documentation\/rsessentials\/rspasswordmanager","title":"RSPasswordManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsreviewalert\/askforreview(showindebug:)","title":"func askForReview(showInDebug: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsreviewalert\/shared","title":"static let shared: RSReviewAlert","type":"property"}],"path":"\/documentation\/rsessentials\/rsreviewalert","title":"RSReviewAlert","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsspacerview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/rsessentials\/rsspacerview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/rsessentials\/rsspacerview","title":"RSSpacerView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rstapaction\/init(action:)","title":"init(action: () -> Void)","type":"init"}],"path":"\/documentation\/rsessentials\/rstapaction","title":"RSTapAction","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/init(customaction:)","title":"init(customAction: (() -> Void))","type":"init"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/init(viewcontroller:allowpostpone:lockeduntilupdated:alerttitle:alertmessage:alertaccept:alertreject:showbadge:)","title":"init(viewController: UIViewController?, allowPostpone: Bool?, lockedUntilUpdated: Bool?, alertTitle: String?, alertMessage: String?, alertAccept: String?, alertReject: String?, showBadge: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/alertaccept","title":"let alertAccept: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/alertmessage","title":"let alertMessage: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/alertreject","title":"let alertReject: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/alerttitle","title":"let alertTitle: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/allowpostpone","title":"let allowPostpone: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/customaction","title":"var customAction: (() -> Void)?","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/lockeduntilupdated","title":"let lockedUntilUpdated: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/showbadge","title":"let showBadge: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/config\/viewcontroller","title":"var viewController: UIViewController?","type":"property"}],"path":"\/documentation\/rsessentials\/rsupdatecheck\/config","title":"RSUpdateCheck.Config","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/checkforupdates(withconfig:)","title":"func checkForUpdates(withConfig: Config)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsupdatecheck\/shared","title":"static let shared: RSUpdateCheck","type":"property"}],"path":"\/documentation\/rsessentials\/rsupdatecheck","title":"RSUpdateCheck","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/alertitem\/init(title:action:style:)","title":"init(title: String, action: (() -> Void)?, style: UIAlertAction.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/alertitem\/action","title":"var action: (() -> Void)?","type":"property"},{"path":"\/documentation\/rsessentials\/rsutils\/alertitem\/style","title":"var style: UIAlertAction.Style","type":"property"},{"path":"\/documentation\/rsessentials\/rsutils\/alertitem\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/rsessentials\/rsutils\/alertitem","title":"RSUtils.AlertItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/htmlcolorpair\/init(htmltag:colorfortag:)","title":"init(htmlTag: String, colorForTag: UIColor)","type":"init"}],"path":"\/documentation\/rsessentials\/rsutils\/htmlcolorpair","title":"RSUtils.HtmlColorPair","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/usetintcolorforalerts","title":"var useTintColorForAlerts: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsutils\/usetintcolorforsheets","title":"var useTintColorForSheets: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/combinedatewithtime(date:time:)","title":"func combineDateWithTime(date: Date, time: Date) -> Date?","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/createactionsheet(type:message:buttons:sourceitem:arrowdirection:includecancelbutton:cancelbuttonaction:)","title":"func createActionSheet(type: AlertType, message: String?, buttons: [AlertItem], sourceItem: UIPopoverPresentationControllerSourceItem, arrowDirection: UIPopoverArrowDirection, includeCancelButton: Bool, cancelButtonAction: (() -> Void)?) -> UIAlertController","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/createactionsheet(type:message:buttons:sourceview:arrowdirection:includecancelbutton:cancelbuttonaction:)","title":"func createActionSheet(type: AlertType, message: String?, buttons: [AlertItem], sourceView: UIView, arrowDirection: UIPopoverArrowDirection, includeCancelButton: Bool, cancelButtonAction: (() -> Void)?) -> UIAlertController","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/createalert(type:message:buttons:)","title":"func createAlert(type: AlertType, message: String?, buttons: [AlertItem]) -> UIAlertController","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/createalert(type:message:okaction:)","title":"func createAlert(type: AlertType, message: String?, okAction: (() -> Void)?) -> UIAlertController","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/createdate(initialdate:calendar:hour:minute:second:)","title":"func createDate(initialDate: Date, calendar: Calendar, hour: Int, minute: Int, second: Int) -> Date","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/dateformatter(format:)","title":"func dateFormatter(format: String) -> DateFormatter","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/dynamictimeformatter(amsymbol:pmsymbol:)","title":"func dynamicTimeFormatter(amSymbol: String?, pmSymbol: String?) -> DateFormatter","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/flashhud(type:after:)","title":"func flashHUD(type: HUDContentType, after: TimeInterval)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getappbuild()","title":"func getAppBuild() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getappidentifier()","title":"func getAppIdentifier() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getappname()","title":"func getAppName() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getappversion()","title":"func getAppVersion() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getappversionandbuild()","title":"func getAppVersionAndBuild() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getattributedstring(fromhtml:textalignment:font:color:underlinecoloredwords:custompairs:)","title":"func getAttributedString(fromHtml: String, textAlignment: NSTextAlignment, font: UIFont, color: UIColor, underlineColoredWords: Bool, customPairs: [HtmlColorPair]?) -> NSMutableAttributedString?","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getdayofmonth(_:format:)","title":"func getDayOfMonth(Date, format: String?) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getdayofweek(_:short:)","title":"func getDayOfWeek(Date, short: Bool) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getdayperiod(_:)","title":"func getDayPeriod(Date) -> DayPeriod","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getdurationstring(startdate:enddate:format:)","title":"func getDurationString(startDate: Date?, endDate: Date?, format: String?) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getgradientcolor(bounds:colors:startpoint:endpoint:)","title":"func getGradientColor(bounds: CGRect, colors: [UIColor], startPoint: CGPoint, endPoint: CGPoint) -> UIColor","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getkeywindow()","title":"func getKeyWindow() -> UIWindow?","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/gettimedifference(startdate:enddate:appendhour:)","title":"func getTimeDifference(startDate: Date?, endDate: Date?, appendHour: Bool) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/gettimedifferenceinpercent(startdate:enddate:)","title":"func getTimeDifferenceInPercent(startDate: Date?, endDate: Date?) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/gettopmostvc()","title":"func getTopMostVC() -> UIViewController?","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/getwindowrootvc()","title":"func getWindowRootVC() -> UIViewController?","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/hidehud(after:completion:)","title":"func hideHUD(after: TimeInterval, completion: ((Bool) -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/isusing12h()","title":"func isUsing12h() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/md5hash(_:)","title":"func md5Hash(String) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/openurl(_:)-8i7h6","title":"func openURL(URL?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/openurl(_:)-8tur7","title":"func openURL(String)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/openurl(in:url:)-1kqc4","title":"func openURL(in: UIViewController, url: String)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/openurl(in:url:)-1s3az","title":"func openURL(in: UIViewController, url: URL?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/runningfromtestflight()","title":"func runningFromTestFlight() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/runningfromxcode()","title":"func runningFromXcode() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/setdevicevolume(volume:viewcontroller:)","title":"func setDeviceVolume(volume: Float, viewController: UIViewController?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/sha1hash(_:)","title":"func sha1Hash(String) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/showdebugmenu(in:items:sourceview:)","title":"func showDebugMenu(in: UIViewController, items: [AlertItem], sourceView: UIView?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/showhud(_:after:)","title":"func showHUD(HUDContentType, after: TimeInterval)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/showtimedalert(title:message:seconds:buttons:continuetext:showin:)","title":"func showTimedAlert(title: String, message: String, seconds: Double, buttons: [AlertItem], continueText: String?, showIn: UIViewController)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/showtimedalert(type:message:seconds:buttons:continuetext:showin:)","title":"func showTimedAlert(type: AlertType, message: String, seconds: Double, buttons: [AlertItem], continueText: String?, showIn: UIViewController)","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/timeformatter(format:amsymbol:pmsymbol:)","title":"func timeFormatter(format: String, amSymbol: String?, pmSymbol: String?) -> DateFormatter","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/validateemail(_:)","title":"func validateEmail(String) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsutils\/validateregex(_:string:)","title":"func validateRegex(String, string: String) -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/alerttype\/custom(title:)","title":"case custom(title: String)","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/alerttype\/error","title":"case error","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/alerttype\/info","title":"case info","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/alerttype\/success","title":"case success","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/alerttype\/warning","title":"case warning","type":"case"}],"path":"\/documentation\/rsessentials\/rsutils\/alerttype","title":"RSUtils.AlertType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/dayperiod\/afternoon","title":"case afternoon","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/dayperiod\/evening","title":"case evening","type":"case"},{"path":"\/documentation\/rsessentials\/rsutils\/dayperiod\/morning","title":"case morning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsutils\/dayperiod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/rsutils\/dayperiod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsutils\/dayperiod","title":"RSUtils.DayPeriod","type":"enum"}],"path":"\/documentation\/rsessentials\/rsutils","title":"RSUtils","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/currentbatterylevel()","title":"func currentBatteryLevel() -> Int","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/devicebiometrics()","title":"func deviceBiometrics() -> BiometricType","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/devicecustomname()","title":"func deviceCustomName() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/devicedebugstring()","title":"func deviceDebugString() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/devicename()","title":"func deviceName() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/fulldeviceinfo()","title":"func fullDeviceInfo() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iphone5()","title":"func iPhone5() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iphone6()","title":"func iPhone6() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iphoneplus()","title":"func iPhonePlus() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iphonewithnotch()","title":"func iPhoneWithNotch() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iphonexr()","title":"func iPhoneXr() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/iscustomdevice(_:)","title":"func isCustomDevice(Device) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/isdisplayzoomenabled()","title":"func isDisplayZoomEnabled() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/islandscape()","title":"func isLandscape() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/islowpowermodeenabled()","title":"func isLowPowerModeEnabled() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/ismac()","title":"func isMac() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/isoneof(customdevices:)","title":"func isOneOf(customDevices: [Device]) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/ispad()","title":"func isPad() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/issimulator()","title":"func isSimulator() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/osname()","title":"func osName() -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/osversion()","title":"func osVersion() -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/shared","title":"static let shared: RSDeviceManager","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype\/faceid","title":"case faceId","type":"case"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype\/none","title":"case none","type":"case"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype\/touchid","title":"case touchId","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsdevicemanager\/biometrictype","title":"RSDeviceManager.BiometricType","type":"enum"}],"path":"\/documentation\/rsessentials\/rsdevicemanager","title":"RSDeviceManager","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/autonomoussystemnumber","title":"let autonomousSystemNumber: Double","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/autonomoussystemorganization","title":"let autonomousSystemOrganization: String?","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/connectiontype","title":"let connectionType: String?","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/ispname","title":"let ispName: String?","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/organizationname","title":"let organizationName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailconnectionmodel","title":"RSGeolocationDetailConnectionModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/currencycode","title":"let currencyCode: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/currencyname","title":"let currencyName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailcurrencymodel","title":"RSGeolocationDetailCurrencyModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/emoji","title":"let emoji: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailflagmodel","title":"RSGeolocationDetailFlagModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/city","title":"let city: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/citygeonameid","title":"let cityGeonameId: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/connection","title":"let connection: RSGeolocationDetailConnectionModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/continent","title":"let continent: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/continentcode","title":"let continentCode: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/continentgeonameid","title":"let continentGeonameId: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/country","title":"let country: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/countrycode","title":"let countryCode: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/countrygeonameid","title":"let countryGeonameId: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/countryiseu","title":"let countryIsEu: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/currency","title":"let currency: RSGeolocationDetailCurrencyModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/flag","title":"let flag: RSGeolocationDetailFlagModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/ipaddress","title":"let ipAddress: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/postalcode","title":"let postalCode: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/region","title":"let region: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/regiongeonameid","title":"let regionGeonameId: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/regionisocode","title":"let regionISOCode: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/security","title":"let security: RSGeolocationDetailSecurityModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/timezone","title":"let timezone: RSGeolocationDetailTimezoneModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailmodel","title":"RSGeolocationDetailModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/isvpn","title":"let isVPN: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailsecuritymodel","title":"RSGeolocationDetailSecurityModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/abbreviation","title":"let abbreviation: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/currenttime","title":"let currentTime: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/gmtoffset","title":"let gmtOffset: Int","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/isdst","title":"let isDst: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsgeolocationdetailtimezonemodel","title":"RSGeolocationDetailTimezoneModel","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/error()","title":"func error()","type":"method"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/impact(style:intensity:)","title":"func impact(style: UIImpactFeedbackGenerator.FeedbackStyle, intensity: CGFloat)","type":"method"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/selection()","title":"func selection()","type":"method"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/success()","title":"func success()","type":"method"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/warning()","title":"func warning()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rshapticmanager\/shared","title":"static let shared: RSHapticManager","type":"property"}],"path":"\/documentation\/rsessentials\/rshapticmanager","title":"RSHapticManager","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslookupmanager\/getlocalizedhello(languagecode:showhud:handler:)","title":"func getLocalizedHello(languageCode: String?, showHUD: Bool, handler: ((String) -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rslookupmanager\/getphonenumberdetails(_:abstractapikey:showhud:handler:)","title":"func getPhoneNumberDetails(String, abstractApiKey: String?, showHUD: Bool, handler: ((RSPhoneNumberDetailModel?) -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rslookupmanager\/getuserlocation(abstractapikey:showhud:handler:)","title":"func getUserLocation(abstractApiKey: String?, showHUD: Bool, handler: ((RSGeolocationDetailModel?) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rslookupmanager\/shared","title":"static let shared: RSLookupManager","type":"property"}],"path":"\/documentation\/rsessentials\/rslookupmanager","title":"RSLookupManager","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimage(showhud:handler:)","title":"func getRandomFoodImage(showHUD: Bool, handler: ((UIImage?) -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsmockmanager\/getrandomfoodimageurl(handler:)","title":"func getRandomFoodImageURL(handler: ((String?) -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/rsmockmanager\/getrandompersonimage(showhud:male:handler:)","title":"func getRandomPersonImage(showHUD: Bool, male: Bool, handler: ((UIImage?) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsmockmanager\/shared","title":"static let shared: RSMockManager","type":"property"}],"path":"\/documentation\/rsessentials\/rsmockmanager","title":"RSMockManager","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/prefix","title":"let prefix: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailcountrymodel","title":"RSPhoneNumberDetailCountryModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/international","title":"let international: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/local","title":"let local: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailformatmodel","title":"RSPhoneNumberDetailFormatModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/carrier","title":"let carrier: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/country","title":"let country: RSPhoneNumberDetailCountryModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/format","title":"let format: RSPhoneNumberDetailFormatModel","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/location","title":"let location: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/phone","title":"let phone: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/type","title":"let type: String","type":"property"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/valid","title":"let valid: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/rsphonenumberdetailmodel","title":"RSPhoneNumberDetailModel","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/devicemanager","title":"DeviceManager","type":"typealias"},{"path":"\/documentation\/rsessentials\/hapticmanager","title":"HapticManager","type":"typealias"},{"path":"\/documentation\/rsessentials\/lookupmanager","title":"LookupManager","type":"typealias"},{"path":"\/documentation\/rsessentials\/mockmanager","title":"MockManager","type":"typealias"},{"path":"\/documentation\/rsessentials\/passwordmanager","title":"PasswordManager","type":"typealias"},{"path":"\/documentation\/rsessentials\/spacerview","title":"SpacerView","type":"typealias"},{"path":"\/documentation\/rsessentials\/updatecheck","title":"UpdateCheck","type":"typealias"},{"path":"\/documentation\/rsessentials\/xibloadingview","title":"XibLoadingView","type":"typealias"},{"path":"\/documentation\/rsessentials\/xibview","title":"XibView","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/rawvalue","title":"var rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/firstgeneration","title":"static let firstGeneration: Device.ApplePencilSupport","type":"property"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/secondgeneration","title":"static let secondGeneration: Device.ApplePencilSupport","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.struct","title":"Device.ApplePencilSupport","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/homepod","title":"case homePod","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad10","title":"case iPad10","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad2","title":"case iPad2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad3","title":"case iPad3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad4","title":"case iPad4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad5","title":"case iPad5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad6","title":"case iPad6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad7","title":"case iPad7","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad8","title":"case iPad8","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipad9","title":"case iPad9","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadair","title":"case iPadAir","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadair2","title":"case iPadAir2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadair3","title":"case iPadAir3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadair4","title":"case iPadAir4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadair5","title":"case iPadAir5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini","title":"case iPadMini","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini2","title":"case iPadMini2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini3","title":"case iPadMini3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini4","title":"case iPadMini4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini5","title":"case iPadMini5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadmini6","title":"case iPadMini6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro10inch","title":"case iPadPro10Inch","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro11inch","title":"case iPadPro11Inch","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro11inch2","title":"case iPadPro11Inch2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro11inch3","title":"case iPadPro11Inch3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro11inch4","title":"case iPadPro11Inch4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch","title":"case iPadPro12Inch","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch2","title":"case iPadPro12Inch2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch3","title":"case iPadPro12Inch3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch4","title":"case iPadPro12Inch4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch5","title":"case iPadPro12Inch5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro12inch6","title":"case iPadPro12Inch6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipadpro9inch","title":"case iPadPro9Inch","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone11","title":"case iPhone11","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone11pro","title":"case iPhone11Pro","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone11promax","title":"case iPhone11ProMax","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone12","title":"case iPhone12","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone12mini","title":"case iPhone12Mini","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone12pro","title":"case iPhone12Pro","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone12promax","title":"case iPhone12ProMax","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone13","title":"case iPhone13","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone13mini","title":"case iPhone13Mini","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone13pro","title":"case iPhone13Pro","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone13promax","title":"case iPhone13ProMax","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone14","title":"case iPhone14","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone14plus","title":"case iPhone14Plus","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone14pro","title":"case iPhone14Pro","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone14promax","title":"case iPhone14ProMax","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone4","title":"case iPhone4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone4s","title":"case iPhone4s","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone5","title":"case iPhone5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone5c","title":"case iPhone5c","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone5s","title":"case iPhone5s","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone6","title":"case iPhone6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone6plus","title":"case iPhone6Plus","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone6s","title":"case iPhone6s","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone6splus","title":"case iPhone6sPlus","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone7","title":"case iPhone7","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone7plus","title":"case iPhone7Plus","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone8","title":"case iPhone8","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphone8plus","title":"case iPhone8Plus","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonese","title":"case iPhoneSE","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonese2","title":"case iPhoneSE2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonese3","title":"case iPhoneSE3","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonex","title":"case iPhoneX","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonexr","title":"case iPhoneXR","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonexs","title":"case iPhoneXS","type":"case"},{"path":"\/documentation\/rsessentials\/device\/iphonexsmax","title":"case iPhoneXSMax","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipodtouch5","title":"case iPodTouch5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipodtouch6","title":"case iPodTouch6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/ipodtouch7","title":"case iPodTouch7","type":"case"},{"path":"\/documentation\/rsessentials\/device\/simulator(_:)","title":"case simulator(Device)","type":"case"},{"path":"\/documentation\/rsessentials\/device\/unknown(_:)","title":"case unknown(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/applepencilsupport-swift.property","title":"var applePencilSupport: ApplePencilSupport","type":"property"},{"path":"\/documentation\/rsessentials\/device\/batterylevel","title":"var batteryLevel: Int?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.property","title":"var batteryState: BatteryState?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/cameras","title":"var cameras: [CameraType]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.property","title":"var cpu: CPU","type":"property"},{"path":"\/documentation\/rsessentials\/device\/diagonal","title":"var diagonal: Double","type":"property"},{"path":"\/documentation\/rsessentials\/device\/has3dtouchsupport","title":"var has3dTouchSupport: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hasbiometricsensor","title":"var hasBiometricSensor: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hascamera","title":"var hasCamera: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/haslidarsensor","title":"var hasLidarSensor: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hasnormalcamera","title":"var hasNormalCamera: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hasroundeddisplaycorners","title":"var hasRoundedDisplayCorners: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hassensorhousing","title":"var hasSensorHousing: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hastelephotocamera","title":"var hasTelephotoCamera: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/hasultrawidecamera","title":"var hasUltraWideCamera: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/haswidecamera","title":"var hasWideCamera: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/iscanvas","title":"var isCanvas: Bool?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/isfaceidcapable","title":"var isFaceIDCapable: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/isguidedaccesssessionactive","title":"var isGuidedAccessSessionActive: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/ispad","title":"var isPad: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/isphone","title":"var isPhone: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/ispod","title":"var isPod: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/issimulator","title":"var isSimulator: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/istouchidcapable","title":"var isTouchIDCapable: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/iszoomed","title":"var isZoomed: Bool?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/localizedmodel","title":"var localizedModel: String?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/orientation-swift.property","title":"var orientation: Orientation","type":"property"},{"path":"\/documentation\/rsessentials\/device\/ppi","title":"var ppi: Int?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/realdevice","title":"var realDevice: Device","type":"property"},{"path":"\/documentation\/rsessentials\/device\/safedescription","title":"var safeDescription: String","type":"property"},{"path":"\/documentation\/rsessentials\/device\/screenbrightness","title":"var screenBrightness: Int","type":"property"},{"path":"\/documentation\/rsessentials\/device\/screenratio","title":"var screenRatio: (width: Double, height: Double)","type":"property"},{"path":"\/documentation\/rsessentials\/device\/supportswirelesscharging","title":"var supportsWirelessCharging: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/device\/systemname","title":"var systemName: String?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/systemversion","title":"var systemVersion: String?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.property","title":"var thermalState: ThermalState?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/isoneof(_:)","title":"func isOneOf([Device]) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/allapplepencilcapabledevices","title":"static var allApplePencilCapableDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allbiometricauthenticationcapabledevices","title":"static var allBiometricAuthenticationCapableDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswith3dtouchsupport","title":"static var allDevicesWith3dTouchSupport: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithalidarsensor","title":"static var allDevicesWithALidarSensor: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithcamera","title":"static var allDevicesWithCamera: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithnormalcamera","title":"static var allDevicesWithNormalCamera: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithroundeddisplaycorners","title":"static var allDevicesWithRoundedDisplayCorners: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithsensorhousing","title":"static var allDevicesWithSensorHousing: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithtelephotocamera","title":"static var allDevicesWithTelephotoCamera: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithultrawidecamera","title":"static var allDevicesWithUltraWideCamera: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithwidecamera","title":"static var allDevicesWithWideCamera: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alldeviceswithwirelesschargingsupport","title":"static var allDevicesWithWirelessChargingSupport: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allfaceidcapabledevices","title":"static var allFaceIDCapableDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allminidevices","title":"static var allMiniDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allpads","title":"static var allPads: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allphones","title":"static var allPhones: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allplussizeddevices","title":"static var allPlusSizedDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allpods","title":"static var allPods: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allprodevices","title":"static var allProDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allrealdevices","title":"static var allRealDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatordeviceswithsensorhousing","title":"static var allSimulatorDevicesWithSensorHousing: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorminidevices","title":"static var allSimulatorMiniDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorpads","title":"static var allSimulatorPads: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorphones","title":"static var allSimulatorPhones: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorplussizeddevices","title":"static var allSimulatorPlusSizedDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorpods","title":"static var allSimulatorPods: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorprodevices","title":"static var allSimulatorProDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulatorxseriesdevices","title":"static var allSimulatorXSeriesDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allsimulators","title":"static var allSimulators: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/alltouchidcapabledevices","title":"static var allTouchIDCapableDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/allxseriesdevices","title":"static var allXSeriesDevices: [Device]","type":"property"},{"path":"\/documentation\/rsessentials\/device\/current","title":"static var current: Device","type":"property"},{"path":"\/documentation\/rsessentials\/device\/identifier","title":"static var identifier: String","type":"property"},{"path":"\/documentation\/rsessentials\/device\/volumeavailablecapacity","title":"static var volumeAvailableCapacity: Int?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/volumeavailablecapacityforimportantusage","title":"static var volumeAvailableCapacityForImportantUsage: Int64?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/volumeavailablecapacityforopportunisticusage","title":"static var volumeAvailableCapacityForOpportunisticUsage: Int64?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/volumetotalcapacity","title":"static var volumeTotalCapacity: Int?","type":"property"},{"path":"\/documentation\/rsessentials\/device\/volumes","title":"static var volumes: [URLResourceKey : Int64]?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/maptodevice(identifier:)","title":"static func mapToDevice(identifier: String) -> Device","type":"method"},{"path":"\/documentation\/rsessentials\/device\/realdevice(from:)","title":"static func realDevice(from: Device) -> Device","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/charging(_:)","title":"case charging(Int)","type":"case"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/full","title":"case full","type":"case"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/unplugged(_:)","title":"case unplugged(Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/lowpowermode","title":"var lowPowerMode: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/'...(_:)-11qov","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/'...(_:)-9moea","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/_(_:_:)-2iquz","title":"static func < (Device.BatteryState, Device.BatteryState) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/_(_:_:)-8dzix","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/_=(_:_:)-16l7j","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/_=(_:_:)-qctw","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/==(_:_:)","title":"static func == (Device.BatteryState, Device.BatteryState) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/batterystate-swift.enum","title":"Device.BatteryState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a10fusion","title":"case a10Fusion","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a10xfusion","title":"case a10XFusion","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a11bionic","title":"case a11Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a12bionic","title":"case a12Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a12xbionic","title":"case a12XBionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a12zbionic","title":"case a12ZBionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a13bionic","title":"case a13Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a14bionic","title":"case a14Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a15bionic","title":"case a15Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a16bionic","title":"case a16Bionic","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a4","title":"case a4","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a5","title":"case a5","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a5x","title":"case a5X","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a6","title":"case a6","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a6x","title":"case a6X","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a7","title":"case a7","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a8","title":"case a8","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a8x","title":"case a8X","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a9","title":"case a9","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/a9x","title":"case a9X","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/m1","title":"case m1","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/m2","title":"case m2","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/'...(_:)-1lyic","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/'...(_:)-enlz","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/_(_:_:)","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/_=(_:_:)-245t3","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/_=(_:_:)-6ed5z","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/cpu-swift.enum","title":"Device.CPU","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cameratype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cameratype\/telephoto","title":"case telephoto","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cameratype\/ultrawide","title":"case ultraWide","type":"case"},{"path":"\/documentation\/rsessentials\/device\/cameratype\/wide","title":"case wide","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/cameratype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/cameratype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/cameratype","title":"Device.CameraType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/orientation-swift.enum\/landscape","title":"case landscape","type":"case"},{"path":"\/documentation\/rsessentials\/device\/orientation-swift.enum\/portrait","title":"case portrait","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/orientation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/orientation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/orientation-swift.enum","title":"Device.Orientation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/critical","title":"case critical","type":"case"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/fair","title":"case fair","type":"case"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/nominal","title":"case nominal","type":"case"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/serious","title":"case serious","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device\/thermalstate-swift.enum","title":"Device.ThermalState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/rsessentials\/device\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/device\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rsessentials\/device\/==(_:_:)","title":"static func == (Device, Device) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/device\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/device","title":"Device","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/customview(view:)","title":"case customView(view: UIView)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/error","title":"case error","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/image(_:)","title":"case image(UIImage?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/label(_:)","title":"case label(String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/labelederror(title:subtitle:)","title":"case labeledError(title: String?, subtitle: String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/labeledimage(image:title:subtitle:)","title":"case labeledImage(image: UIImage?, title: String?, subtitle: String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/labeledprogress(title:subtitle:)","title":"case labeledProgress(title: String?, subtitle: String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/labeledrotatingimage(image:title:subtitle:)","title":"case labeledRotatingImage(image: UIImage?, title: String?, subtitle: String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/labeledsuccess(title:subtitle:)","title":"case labeledSuccess(title: String?, subtitle: String?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/progress","title":"case progress","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/rotatingimage(_:)","title":"case rotatingImage(UIImage?)","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/success","title":"case success","type":"case"},{"path":"\/documentation\/rsessentials\/hudcontenttype\/systemactivity","title":"case systemActivity","type":"case"}],"path":"\/documentation\/rsessentials\/hudcontenttype","title":"HUDContentType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/dispatch\/dispatchqueue\/background(delay:background:completion:)","title":"static func background(delay: Double, background: (() -> Void)?, completion: (() -> Void)?)","type":"method"}],"path":"\/documentation\/rsessentials\/dispatch\/dispatchqueue","title":"DispatchQueue","type":"extension"}],"path":"\/documentation\/rsessentials\/dispatch","title":"Dispatch","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/dateformatter\/init(format:locale:)","title":"init(format: String, locale: Locale?)","type":"init"}],"path":"\/documentation\/rsessentials\/foundation\/dateformatter","title":"DateFormatter","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/nsattributedstring\/+(_:_:)-4e5j6","title":"static func + (NSAttributedString, NSAttributedString) -> NSAttributedString","type":"op"},{"path":"\/documentation\/rsessentials\/foundation\/nsattributedstring\/+(_:_:)-5q0uo","title":"static func + (NSAttributedString, String) -> NSAttributedString","type":"op"},{"path":"\/documentation\/rsessentials\/foundation\/nsattributedstring\/+(_:_:)-9bksq","title":"static func + (String, NSAttributedString) -> NSAttributedString","type":"op"}],"path":"\/documentation\/rsessentials\/foundation\/nsattributedstring","title":"NSAttributedString","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/nsmutableattributedstring\/+=(_:_:)-35sak","title":"static func += (NSMutableAttributedString, String) -> NSMutableAttributedString","type":"op"},{"path":"\/documentation\/rsessentials\/foundation\/nsmutableattributedstring\/+=(_:_:)-6hhe5","title":"static func += (NSMutableAttributedString, NSAttributedString) -> NSMutableAttributedString","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/nsmutableattributedstring\/replacefonts(with:)","title":"func replaceFonts(with: UIFont)","type":"method"}],"path":"\/documentation\/rsessentials\/foundation\/nsmutableattributedstring","title":"NSMutableAttributedString","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/data\/prettyjson","title":"var prettyJson: String?","type":"property"}],"path":"\/documentation\/rsessentials\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/-(_:_:)","title":"static func - (Date, Date) -> TimeInterval","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/init(milliseconds:)","title":"init(milliseconds: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/endofday","title":"var endOfDay: Date","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/endofmonth","title":"var endOfMonth: Date","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/endofweek","title":"var endOfWeek: Date?","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/isinthefuture","title":"var isInTheFuture: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/isinthepast","title":"var isInThePast: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/seconds","title":"var seconds: TimeInterval","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/startofday","title":"var startOfDay: Date","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/startofmonth","title":"var startOfMonth: Date","type":"property"},{"path":"\/documentation\/rsessentials\/foundation\/date\/startofweek","title":"var startOfWeek: Date?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/adding(value:type:)","title":"func adding(value: Int, type: DateScaleType) -> Date?","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/insameday(as:)","title":"func inSameDay(as: Date) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/insamemonth(as:)","title":"func inSameMonth(as: Date) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/insameweek(as:)","title":"func inSameWeek(as: Date) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/isequal(to:togranularity:in:)","title":"func isEqual(to: Date, toGranularity: Calendar.Component, in: Calendar) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/isinweekend(date:)","title":"func isInWeekend(date: Date) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/issameyear(as:)","title":"func isSameYear(as: Date) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/istoday(date:)","title":"func isToday(date: Date) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/fromstring(_:format:)","title":"static func fromString(String, format: String) -> Date","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/getalldates(startingfrom:to:)","title":"static func getAllDates(startingFrom: Date, to: Date) -> [Date]","type":"method"},{"path":"\/documentation\/rsessentials\/foundation\/date\/randombetween(start:end:)","title":"static func randomBetween(start: Date, end: Date) -> Date","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/days","title":"case days","type":"case"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/months","title":"case months","type":"case"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/years","title":"case years","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/foundation\/date\/datescaletype","title":"Date.DateScaleType","type":"enum"}],"path":"\/documentation\/rsessentials\/foundation\/date","title":"Date","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/jsondecoder\/keydecodingstrategy\/convertfromuppercamelcase","title":"static var convertFromUpperCamelCase: JSONDecoder.KeyDecodingStrategy","type":"property"}],"path":"\/documentation\/rsessentials\/foundation\/jsondecoder\/keydecodingstrategy","title":"JSONDecoder.KeyDecodingStrategy","type":"extension"}],"path":"\/documentation\/rsessentials\/foundation\/jsondecoder","title":"JSONDecoder","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/foundation\/jsonencoder\/keyencodingstrategy\/converttouppercamelcase","title":"static var convertToUpperCamelCase: JSONEncoder.KeyEncodingStrategy","type":"property"}],"path":"\/documentation\/rsessentials\/foundation\/jsonencoder\/keyencodingstrategy","title":"JSONEncoder.KeyEncodingStrategy","type":"extension"}],"path":"\/documentation\/rsessentials\/foundation\/jsonencoder","title":"JSONEncoder","type":"extension"}],"path":"\/documentation\/rsessentials\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/objectivec\/nsobject\/debugprint(userslogger:)","title":"func debugPrint(useRSLogger: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/objectivec\/nsobject\/propertynames()","title":"func propertyNames() -> [String]","type":"method"}],"path":"\/documentation\/rsessentials\/objectivec\/nsobject","title":"NSObject","type":"extension"}],"path":"\/documentation\/rsessentials\/objectivec","title":"ObjectiveC","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/quartzcore\/cagradientlayer\/primarygradient(colors:on:invert:lefttoright:)","title":"static func primaryGradient(colors: [UIColor], on: UIView, invert: Bool, leftToRight: Bool) -> UIImage?","type":"method"}],"path":"\/documentation\/rsessentials\/quartzcore\/cagradientlayer","title":"CAGradientLayer","type":"extension"}],"path":"\/documentation\/rsessentials\/quartzcore","title":"QuartzCore","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/bidirectionalcollection\/subscript(safe:)","title":"subscript(safe _: Int) -> Element?","type":"subscript"}],"path":"\/documentation\/rsessentials\/swift\/bidirectionalcollection","title":"BidirectionalCollection","type":"extension"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/collection\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/rsessentials\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/decodable\/init(discardinganerrorfrom:printerror:options:decodersetupclosure:)","title":"init?(discardingAnErrorFrom: Any, printError: Bool, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?)","type":"init"},{"path":"\/documentation\/rsessentials\/swift\/decodable\/init(from:options:decoder:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoder: JSONDecoder) throws","type":"init"},{"path":"\/documentation\/rsessentials\/swift\/decodable\/init(from:options:decodersetupclosure:)","title":"init(from: Any, options: JSONSerialization.WritingOptions, decoderSetupClosure: ((JSONDecoder) -> Void)?) throws","type":"init"}],"path":"\/documentation\/rsessentials\/swift\/decodable","title":"Decodable","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/stringprotocol\/digits","title":"var digits: [Int]","type":"property"}],"path":"\/documentation\/rsessentials\/swift\/stringprotocol","title":"StringProtocol","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/array\/average-1k2z3","title":"var average: Double","type":"property"},{"path":"\/documentation\/rsessentials\/swift\/array\/average-9oai2","title":"var average: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/array\/containssameelements(as:)","title":"func containsSameElements(as: [Element]) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/array\/index(of:)","title":"func index(of: Element) -> Int?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/array\/removeduplicates()","title":"func removeDuplicates() -> Array","type":"method"}],"path":"\/documentation\/rsessentials\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/swift\/string\/contains(_:casesensitive:)","title":"func contains(String, caseSensitive: Bool) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/formatasphonenumber()","title":"func formatAsPhoneNumber() -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/getacronyms(separator:)","title":"func getAcronyms(separator: String) -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/localized()","title":"func localized() -> String","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/localizedifvalid()","title":"func localizedIfValid() -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/matches(regex:)","title":"func matches(regex: String) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/remove(_:)","title":"func remove(String) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/replace(_:with:)","title":"func replace(String, with: String) -> String","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/slice(from:to:)","title":"func slice(from: String, to: String) -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/slicemultipletimes(from:to:)","title":"func sliceMultipleTimes(from: String, to: String) -> [String]","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/substring(from:length:)","title":"func substring(from: Int, length: Int) -> String?","type":"method"},{"path":"\/documentation\/rsessentials\/swift\/string\/substring(start:offsetby:)","title":"func substring(start: Int, offsetBy: Int) -> String?","type":"method"}],"path":"\/documentation\/rsessentials\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/rsessentials\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/nslayoutconstraint\/setmultiplier(_:)","title":"func setMultiplier(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/nslayoutconstraint\/setmultiplier(multiplier:)","title":"func setMultiplier(multiplier: CGFloat) -> NSLayoutConstraint","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/nslayoutconstraint","title":"NSLayoutConstraint","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uibarbuttonitem\/localizablekey","title":"var localizableKey: String","type":"property"}],"path":"\/documentation\/rsessentials\/uikit\/uibarbuttonitem","title":"UIBarButtonItem","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uibutton\/localizablekey","title":"var localizableKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uibutton\/setattributedtext(fromhtml:underlinecoloredwords:custompairs:)","title":"func setAttributedText(fromHtml: String, underlineColoredWords: Bool, customPairs: [RSUtils.HtmlColorPair]?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uibutton\/underline(color:)","title":"func underline(color: UIColor?)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uibutton","title":"UIButton","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/init(hex:)","title":"init?(hex: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/isdark","title":"var isDark: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/islight","title":"var isLight: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/encode()","title":"func encode() -> Data?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/image(_:)","title":"func image(CGSize) -> UIImage","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/name()","title":"func name() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uicolor\/color(data:)","title":"class func color(data: Data) -> UIColor?","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uicolor","title":"UIColor","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uifont\/bold()","title":"func bold() -> UIFont","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uifont\/bolditalics()","title":"func boldItalics() -> UIFont","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uifont\/italics()","title":"func italics() -> UIFont","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uifont\/withtraits(_:)","title":"func withTraits(UIFontDescriptor.SymbolicTraits) -> UIFont","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uifont","title":"UIFont","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uigesturerecognizer\/init(block:)","title":"init(block: ((UIGestureRecognizer) -> ()))","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uigesturerecognizer\/action","title":"UIGestureRecognizer.Action","type":"typealias"}],"path":"\/documentation\/rsessentials\/uikit\/uigesturerecognizer","title":"UIGestureRecognizer","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/init(pixelbuffer:)","title":"init?(pixelBuffer: CVPixelBuffer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/noir","title":"var noir: UIImage?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/asdata(usepng:)","title":"func asData(usePng: Bool) -> Data?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/asnsdata(usepng:)","title":"func asNSData(usePng: Bool) -> NSData?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/buffer(with:)","title":"func buffer(with: CGSize) -> CVPixelBuffer?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/colored(in:)","title":"func colored(in: UIColor) -> UIImage","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/crop(_:)","title":"func crop(CropStyle) -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropextraalpha()","title":"func cropExtraAlpha() -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/inverted()","title":"func inverted() -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/issquare()","title":"func isSquare() -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/mask(maskimage:)","title":"func mask(maskImage: UIImage) -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/resize(_:opaque:)","title":"func resize(CGFloat, opaque: Bool) -> UIImage","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/resize(to:)","title":"func resize(to: CGSize) -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/resizeimagepreservingaspectratio(targetsize:)","title":"func resizeImagePreservingAspectRatio(targetSize: CGSize) -> UIImage","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/resizeimagepreservingaspectratioandfilling(targetsize:)","title":"func resizeImagePreservingAspectRatioAndFilling(targetSize: CGSize?) -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/rotate(radians:)","title":"func rotate(radians: Float) -> UIImage?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropstyle\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropstyle\/square","title":"case square","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/uikit\/uiimage\/cropstyle","title":"UIImage.CropStyle","type":"enum"}],"path":"\/documentation\/rsessentials\/uikit\/uiimage","title":"UIImage","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uilabel\/localizablekey","title":"var localizableKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uilabel\/setattributedtext(fromhtml:underlinecoloredwords:custompairs:)","title":"func setAttributedText(fromHtml: String, underlineColoredWords: Bool, customPairs: [RSUtils.HtmlColorPair]?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uilabel\/underline(color:)","title":"func underline(color: UIColor?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uilabel\/underline(word:color:)","title":"func underline(word: String, color: UIColor?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uilabel\/underline(words:color:)","title":"func underline(words: [String], color: UIColor?)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uilabel","title":"UILabel","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uinavigationcontroller\/init(_:)","title":"init(UIViewController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uinavigationcontroller\/previousviewcontroller","title":"var previousViewController: UIViewController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uinavigationcontroller\/poptoviewcontroller(index:animated:)","title":"func popToViewController(index: Int, animated: Bool)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uinavigationcontroller","title":"UINavigationController","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uipageviewcontroller\/nextpage(animated:)","title":"func nextPage(animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uipageviewcontroller\/previouspage(animated:)","title":"func previousPage(animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uipageviewcontroller\/removeswipegesture()","title":"func removeSwipeGesture()","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uipageviewcontroller","title":"UIPageViewController","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiscrollview\/scrolltobottom(animated:)","title":"func scrollToBottom(animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiscrollview\/scrolltotop(animated:)","title":"func scrollToTop(animated: Bool)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uiscrollview","title":"UIScrollView","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uistackview\/addarrangedsubview(view:width:height:)","title":"func addArrangedSubview(view: UIView, width: CGFloat?, height: CGFloat?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uistackview\/removeallarrangedsubviews()","title":"func removeAllArrangedSubviews()","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uistackview","title":"UIStackView","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitableview\/indexpathisvalid(_:)","title":"func indexPathIsValid(IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uitableview\/scrolltobottomifneeded()","title":"func scrollToBottomIfNeeded()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uitableview\/scrolltobottomrow()","title":"func scrollToBottomRow()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uitableview\/scrolltoendofbottomrow(animated:)","title":"func scrollToEndOfBottomRow(animated: Bool)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uitableview","title":"UITableView","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitableviewcell\/removesectionseparators()","title":"func removeSectionSeparators()","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uitableviewcell","title":"UITableViewCell","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitapgesturerecognizer\/didtapattributedtextinlabel(label:inrange:)","title":"func didTapAttributedTextInLabel(label: UILabel, inRange: NSRange) -> Bool","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uitapgesturerecognizer","title":"UITapGestureRecognizer","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextfield\/doneaccessory","title":"var doneAccessory: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uitextfield\/localizablekey","title":"var localizableKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextfield\/adddonebuttononkeyboard()","title":"func addDoneButtonOnKeyboard()","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uitextfield","title":"UITextField","type":"extension"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/placeholderlabel-swift.class","title":"UITextView.PlaceholderLabel","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/doneaccessory","title":"var doneAccessory: Bool","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/placeholder","title":"var placeholder: String","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/placeholdercolor","title":"var placeholderColor: UIColor","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/placeholderlabel-swift.property","title":"var placeholderLabel: PlaceholderLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/adddonebuttononkeyboard()","title":"func addDoneButtonOnKeyboard()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/setattributedtext(fromhtml:)","title":"func setAttributedText(fromHtml: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uitextview\/textstorage(_:didprocessediting:range:changeinlength:)","title":"func textStorage(NSTextStorage, didProcessEditing: NSTextStorage.EditActions, range: NSRange, changeInLength: Int)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uitextview\/nstextstoragedelegate-implementations","title":"NSTextStorageDelegate Implementations","type":"symbol"}],"path":"\/documentation\/rsessentials\/uikit\/uitextview","title":"UITextView","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/cornerradius","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/ishiddeninstackview","title":"var isHiddenInStackView: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addblureffect(style:alpha:)","title":"func addBlurEffect(style: UIBlurEffect.Style, alpha: CGFloat)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addborder()","title":"func addBorder()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addborder(color:width:)","title":"func addBorder(color: UIColor, width: CGFloat)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addbottomline(height:color:)","title":"func addBottomLine(height: CGFloat, color: UIColor)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addheightconstraint(height:item:identifier:)","title":"func addHeightConstraint(height: CGFloat, item: UIView, identifier: String?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addoutsideborder(_:width:)","title":"func addOutsideBorder(UIColor, width: CGFloat)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addtapaction(delegate:action:)","title":"func addTapAction(delegate: UIGestureRecognizerDelegate?, action: () -> Void)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addviewshadow(opacity:radius:offset:color:)","title":"func addViewShadow(opacity: Float, radius: CGFloat, offset: CGSize, color: UIColor)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/addwidthconstraint(width:item:identifier:)","title":"func addWidthConstraint(width: CGFloat, item: UIView, identifier: String?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/getconvertedframe(fromsubview:)","title":"func getConvertedFrame(fromSubview: UIView) -> CGRect?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/getscreenshot()","title":"func getScreenShot() -> UIImage?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removeallconstraints()","title":"func removeAllConstraints()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removeborder()","title":"func removeBorder()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removefromstackview(_:)","title":"func removeFromStackView(UIStackView?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removeoutsideborder()","title":"func removeOutsideBorder()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removetapaction()","title":"func removeTapAction()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/removeviewshadow()","title":"func removeViewShadow()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiview\/subviews(oftype:)","title":"func subviews<T>(ofType: T.Type) -> [T]","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uiview","title":"UIView","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/ismodal","title":"var isModal: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/addchildvc(_:inview:)","title":"func addChildVC(UIViewController, inView: UIView?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/closevc()","title":"func closeVC()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/disableswipegesture()","title":"func disableSwipeGesture()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/getbottomsafeareaheight()","title":"func getBottomSafeAreaHeight() -> CGFloat?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/gettopsafeareaheight()","title":"func getTopSafeAreaHeight() -> CGFloat?","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/hidekeyboardwhentappedaround()","title":"func hideKeyboardWhenTappedAround()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/hidexibview(_:)","title":"func hideXibView(XibView)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/keyboardwillhideinscrollview(notification:)","title":"func keyboardWillHideInScrollView(notification: Notification)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/keyboardwillhideinvc(notification:)","title":"func keyboardWillHideInVC(notification: Notification)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/keyboardwillshowinscrollview(notification:)","title":"func keyboardWillShowInScrollView(notification: Notification)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/keyboardwillshowinvc(notification:)","title":"func keyboardWillShowInVC(notification: Notification)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/popvc()","title":"func popVC()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/presentcontroller(_:animated:completion:)","title":"func presentController(UIViewController, animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/presentviewaspopover(view:preferredsize:source:arrowdirrection:)","title":"func presentViewAsPopover(view: UIView, preferredSize: CGSize, source: UIView, arrowDirrection: UIPopoverArrowDirection?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/pushcontroller(_:navcontroller:animated:)","title":"func pushController(UIViewController, navController: UINavigationController?, animated: Bool)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/removefromparentaschild()","title":"func removeFromParentAsChild()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/scrollforkeyboard()","title":"func scrollForKeyboard()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/scrollforkeyboardinscrollview()","title":"func scrollForKeyboardInScrollView()","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/setdevicevolume(_:)","title":"func setDeviceVolume(Float)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showactionsheet(type:message:buttons:sourcenavitem:arrowdirection:includecancelbutton:cancelbuttonaction:)","title":"func showActionSheet(type: RSUtils.AlertType, message: String?, buttons: [RSUtils.AlertItem], sourceNavItem: UIPopoverPresentationControllerSourceItem, arrowDirection: UIPopoverArrowDirection, includeCancelButton: Bool, cancelButtonAction: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showactionsheet(type:message:buttons:sourceview:arrowdirection:includecancelbutton:cancelbuttonaction:)","title":"func showActionSheet(type: RSUtils.AlertType, message: String?, buttons: [RSUtils.AlertItem], sourceView: UIView, arrowDirection: UIPopoverArrowDirection, includeCancelButton: Bool, cancelButtonAction: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(_:)","title":"func showAlert(UIAlertController)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(title:_:action:)","title":"func showAlert(title: String, String?, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(title:_:buttons:)","title":"func showAlert(title: String, String?, buttons: [RSUtils.AlertItem])","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(title:_:oktitle:action:)","title":"func showAlert(title: String, String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(type:_:buttons:)","title":"func showAlert(type: RSUtils.AlertType, String?, buttons: [RSUtils.AlertItem])","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showalert(type:_:oktitle:action:)","title":"func showAlert(type: RSUtils.AlertType, String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showerroralert(_:action:)","title":"func showErrorAlert(String?, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showerroralert(_:oktitle:action:)","title":"func showErrorAlert(String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showinfoalert(_:action:)","title":"func showInfoAlert(String?, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showinfoalert(_:oktitle:action:)","title":"func showInfoAlert(String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showsuccessalert(_:action:)","title":"func showSuccessAlert(String?, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showsuccessalert(_:oktitle:action:)","title":"func showSuccessAlert(String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showwarningalert(_:action:)","title":"func showWarningAlert(String?, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showwarningalert(_:oktitle:action:)","title":"func showWarningAlert(String?, okTitle: String, action: (() -> Void)?)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/showxibview(_:)","title":"func showXibView(XibView)","type":"method"},{"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller\/togglexibview(_:)","title":"func toggleXibView(XibView)","type":"method"}],"path":"\/documentation\/rsessentials\/uikit\/uiviewcontroller","title":"UIViewController","type":"extension"}],"path":"\/documentation\/rsessentials\/uikit","title":"UIKit","type":"extension"}],"path":"\/documentation\/rsessentials","title":"RSEssentials","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}